[{"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/index.js":"1","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/globalState.js":"2","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/App.js":"3","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/stateReducer.js":"4","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/About.js":"5","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantRecord.js":"6","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/LandingPage.js":"7","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SelectedPlantFirstEntry.js":"8","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SearchPlant.js":"9","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewLog.js":"10","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewRecord.js":"11","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/GardenSheds.js":"12","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Navbar.js":"13","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantThumbnails.js":"14","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/types.js":"15","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/api.js":"16"},{"size":244,"mtime":1607856370897,"results":"17","hashOfConfig":"18"},{"size":463,"mtime":1607856370890,"results":"19","hashOfConfig":"18"},{"size":2290,"mtime":1608011206509,"results":"20","hashOfConfig":"18"},{"size":951,"mtime":1607987246109,"results":"21","hashOfConfig":"18"},{"size":133,"mtime":1607079788489,"results":"22","hashOfConfig":"18"},{"size":3580,"mtime":1608011206516,"results":"23","hashOfConfig":"18"},{"size":422,"mtime":1607464448197,"results":"24","hashOfConfig":"18"},{"size":178,"mtime":1607079788509,"results":"25","hashOfConfig":"18"},{"size":140,"mtime":1607079788503,"results":"26","hashOfConfig":"18"},{"size":144,"mtime":1607079788492,"results":"27","hashOfConfig":"18"},{"size":153,"mtime":1607079788494,"results":"28","hashOfConfig":"18"},{"size":2410,"mtime":1607987246090,"results":"29","hashOfConfig":"18"},{"size":1313,"mtime":1607987246094,"results":"30","hashOfConfig":"18"},{"size":1852,"mtime":1608011702527,"results":"31","hashOfConfig":"18"},{"size":201,"mtime":1607987246113,"results":"32","hashOfConfig":"18"},{"size":189,"mtime":1607987246105,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ktzwsg",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/index.js",[],["72","73"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/globalState.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/App.js",["74"],"import React, { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Navbar from './components/Navbar';\nimport LandingPage from './components/LandingPage';\nimport About from './components/About';\nimport PlantRecord from './components/PlantRecord';\nimport SelectedPlantFirstEntry from './components/SelectedPlantFirstEntry';\nimport GardenSheds from './components/GardenSheds';\nimport PlantThumbnails from './components/PlantThumbnails';\nimport CreateNewRecord from './components/CreateNewRecord';\nimport SearchPlant from './components/SearchPlant';\nimport CreateNewLog from './components/CreateNewLog';\nimport api from './config/api';\nimport { useGlobalState } from './config/globalState';\nimport { SET_USER, AUTH_SIGN_IN } from './config/types';\n\n\nconst App = () => {\n  const { dispatch } = useGlobalState();\n\n  useEffect(() => {\n    console.log('app started');\n    const acquireUser = async () => {\n      try {\n        const acquiredUser = await api.get('/api/auth/userinfo');\n        console.log('acquiredUser:', acquiredUser);\n        if (acquiredUser) {\n          dispatch({\n            type: SET_USER,\n            payload: acquiredUser\n          })\n          dispatch({ type: AUTH_SIGN_IN });\n        }\n      } catch (err) {\n        console.log('err: ', err.message);\n      }\n    }\n    acquireUser();\n  }, []);\n  return (\n    <div id=\"app-container\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"body container\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/sheds/:shedId/records/:plantRecordId/first-entry\" component={SelectedPlantFirstEntry} />\n            <Route path=\"/sheds/:shedId/records/:plantRecordId\" component={PlantRecord} />\n            <Route path=\"/sheds/:shedId\" component={PlantThumbnails} />\n            <Route path=\"/sheds\" component={GardenSheds} />\n            <Route path=\"/new-record\" component={CreateNewRecord} />\n            <Route path=\"/search\" component={SearchPlant} />\n            <Route path=\"/new-log\" component={CreateNewLog} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/stateReducer.js",["75","76","77","78"],"import { AUTH_SIGN_IN, AUTH_SIGN_OUT, SET_TOKEN, SET_USER, SET_SHEDS } from './types';\n\nexport const initialState = {\n  isLoggedIn: false,\n  errMsg: '',\n  currentUser: null,\n  token: '',\n  sheds: []\n};\n\nexport const stateReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_SIGN_IN:\n      return {\n        ...state,\n        isLoggedIn: true,\n        errMsg: ''\n      };\n    case AUTH_SIGN_OUT:\n      console.log('AUTH_SIGN_OUT');\n      return {\n        ...state,\n        isLoggedIn: false,\n        errMsg: ''\n      };\n    case SET_TOKEN:\n      console.log('SET_TOKEN');\n      return {\n        ...state,\n        token: action.payload\n      };\n    case SET_USER:\n      console.log('SET_USER');\n      return  {\n        ...state,\n        currentUser: action.payload\n      };\n    case SET_SHEDS:\n      console.log('SET_SHEDS');\n      return {\n        ...state,\n        sheds: action.payload\n      }\n    defualt:\n      return state;\n  }\n};\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/About.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantRecord.js",["79","80"],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { useGlobalState } from '../config/globalState';\nimport api from '../config/api';\nimport { Link } from 'react-router-dom';\n\nconst PlantRecord = () => {\n  const [plantRecord, setPlantRecord] = useState(null); \n  const { shedId, plantRecordId } = useParams();\n  \n  useEffect(() => {\n    const findPlantRecord = async () => {\n      const res = await api(`/api/sheds/${shedId}/records/${plantRecordId}`); \n      const foundPlantRecord = res.data;\n      console.log('found Plant record:', foundPlantRecord);\n      if(foundPlantRecord) {\n        setPlantRecord(foundPlantRecord);\n      } \n    }\n    findPlantRecord();\n  }, []);\n  return (\n    <div>\n      { \n        plantRecord && \n          <>\n            <p className=\"path\">\n              <Link to={`/sheds/${shedId}`}> {`${plantRecord.ownedShed.owner.email}`}</Link>\n              {` > ${plantRecord.commonName}`}\n            </p>\n            <div className=\"icon icon-record icon-record-follow\">\n              <i class=\"fas fa-leaf\"></i>\n            </div>\n            \n            <div className=\"button-wrapper\">\n              <button className=\"about\" type=\"button\">About</button>\n            </div>\n            <div className=\"button-wrapper\">\n              <button className=\"new-log\" type=\"button\">Creat a new log</button>\n            </div>\n\n            <div id=\"plant-record-container\">\n              <div id=\"image-wrapper\">\n                <img class=\"main-image\" src=\"http://placekitten.com/400/400\"  alt=\"\"/>\n              </div>\n\n              <div className=\"thumbnail-1\">\n                <img className=\"thumbnail\" src=\"http://placekitten.com/70/50\" alt=\"\"/>\n              </div>\n              <div className=\"thumbnail-2\">\n                <img className=\"thumbnail\" src=\"http://placekitten.com/70/50\" alt=\"\"/>\n              </div>\n              <div className=\"thumbnail-3\">\n                <img className=\"thumbnail\" src=\"http://placekitten.com/70/50\" alt=\"\"/>\n              </div>\n              <div className=\"thumbnail-4\">\n                <img className=\"thumbnail\" src=\"http://placekitten.com/70/50\" alt=\"\"/>\n              </div>\n              <div className=\"thumbnail-5\">\n                <img className=\"thumbnail\" src=\"http://placekitten.com/70/50\" alt=\"\"/>\n              </div>\n\n            </div>\n            \n            <div className=\"icon icon-record icon-record-delete\">\n              <i className=\"far fa-trash-alt\"></i>\n            </div>\n            <div className=\"icon icon-record icon-record-edit\">\n              <i className=\"far fa-edit\"></i>\n            </div>\n            \n            <p className=\"sub-headings\"><strong>Date:</strong> 17/11/2020 (Day 1)</p>\n            <p className=\"sub-headings\"><strong>My Notes:</strong></p>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec semper vitae magna eget mattis. \n              Vivamus posuere iaculis consequat. Pellentesque euismod elementum bibendum.\n              Quisque tincidunt nisi a ligula sagittis accumsan. Fusce sed luctus elit. \n              Aenean at ipsum iaculis, facilisis lectus et, interdum nisi. Pellentesque quis fermentum ante. \n              In id massa eu nisi dignissim elementum in vitae quam. Duis eros ante, pulvinar ut est et, maximus consequat augue. \n              Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed vitae tellus lacus. \n            </p>\n          </>\n      }\n    </div>\n  )\n}\n\nexport default PlantRecord\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/LandingPage.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SelectedPlantFirstEntry.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SearchPlant.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewLog.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewRecord.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/GardenSheds.js",["81"],"import React, { useEffect } from 'react';\nimport api from '../config/api';\nimport { useGlobalState } from '../config/globalState';\nimport { SET_SHEDS } from '../config/types';\nimport { Link } from 'react-router-dom'\n\n\nconst GardenSheds = () => {\n  const { state, dispatch } = useGlobalState();\n  const { sheds } = state;\n\n  useEffect(() => {\n    api.get('/api/sheds')\n      .then(res => {\n        console.log(res);\n        console.log(res.data[0].plantRecords.length);\n        console.log(res.data[0].plantRecords[0].commonName);\n        console.log(res.data[0].plantRecords[1].commonName);\n        console.log(res.data[0].plantRecords[0].recordPhoto);\n        console.log(res.data[0].plantRecords[1].recordPhoto);\n        dispatch({\n          type: SET_SHEDS,\n          payload: res.data\n        })\n      });\n  }, []);\n\n  console.log('sheds: ',sheds)\n\n  return (\n    <div>\n      <h1>Garden Sheds</h1>\n      <div id=\"garden-sheds-container\">\n        {\n          sheds.length > 0 &&\n          sheds.map(shed => (\n            <div key={shed._id}>\n              {\n                shed.plantRecords.length > 0 && (\n                  <Link to={ `/sheds/${shed._id}` }>\n                    <img className=\"garden-shed\" src={shed.plantRecords[0].recordPhoto} alt=\"\"/>\n                  </Link>\n                )\n              }\n              <p>{shed.owner.email}</p>\n              {\n                shed.plantRecords.length > 0 && (\n                  <p>\n                    {shed.plantRecords.map(plantRecord => plantRecord.commonName).join(', ')}\n                  </p>\n                )\n              }\n            </div>\n          ))\n        }\n        <div>\n          <img className=\"garden-shed\" src=\"http://placekitten.com/800/400\" alt=\"\"/>\n          <p>some email</p>\n          <p>Daisy, Sun flower, Peace Lilly</p>\n        </div>\n        <div>\n          <img className=\"garden-shed\" src=\"http://placekitten.com/800/400\" alt=\"\"/>\n          <p>some email</p>\n          <p>Daisy, Sun flower, Peace Lilly</p>\n        </div>\n        <div>\n          <img className=\"garden-shed\" src=\"http://placekitten.com/800/400\" alt=\"\"/>\n          <p>some email</p>\n          <p>Daisy, Sun flower, Peace Lilly</p>\n        </div>\n        <div>\n          <img className=\"garden-shed\" src=\"http://placekitten.com/800/400\" alt=\"\"/>\n          <p>Hello</p>\n        </div>\n      </div>\n    </div> \n  );\n}\n\nexport default GardenSheds;\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Navbar.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantThumbnails.js",["82","83","84"],"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useGlobalState } from '../config/globalState';\nimport api from '../config/api';\n\n\nconst PlantThumbnails = () => {\n  const { state, dispatch } = useGlobalState();\n  const { sheds } = state;\n  const [shed, setShed] = useState(null); \n  const { shedId } = useParams();\n  console.log(shedId);\n  useEffect(() => {\n    // const foundShed = sheds.find(element => element._id === shedId);\n    const findShed = async () => {\n      const res = await api(`/api/sheds/${shedId}`); \n      const foundShed = res.data;\n      console.log('foundShed:', foundShed);\n      if(foundShed) {\n        setShed(foundShed);\n      } \n    }\n    findShed();\n  }, []);\n  console.log('shed:', shed);\n  return (\n    <div>\n      {\n        shed &&\n          <>\n            <p className=\"path\">{shed.owner.email}</p>\n          \n            <div id=\"plant-thumbnails-container\">\n              <div className=\"plant-thumbnail-wrapper\">\n                <img className=\"plant-thumbnail\" src=\"http://placekitten.com/400/300\" alt=\"\"/>\n                <p>Daisy 1</p>\n              </div>\n              <div className=\"plant-thumbnail-wrapper\">\n                <img className=\"plant-thumbnail\" src=\"http://placekitten.com/400/300\" alt=\"\"/>\n                <p>Daisy 2</p>\n              </div>\n              <div className=\"plant-thumbnail-wrapper\">\n                <img className=\"plant-thumbnail\" src=\"http://placekitten.com/400/300\" alt=\"\"/>\n                <p>Daisy 3</p>\n              </div>\n              <div className=\"plant-thumbnail-wrapper\">\n                <img className=\"plant-thumbnail\" src=\"http://placekitten.com/400/300\" alt=\"\"/>\n                <p>Daisy 4</p>\n              </div>\n            </div>\n          </>\n      }\n    </div>\n  )\n}\n\nexport default PlantThumbnails\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/types.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/api.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":40,"column":6,"nodeType":"91","endLine":40,"endColumn":8,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":12,"column":3,"nodeType":"95","messageId":"96","endLine":46,"endColumn":4},{"ruleId":"97","severity":1,"message":"98","line":44,"column":5,"nodeType":"99","messageId":"100","endLine":45,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":44,"column":5,"nodeType":"103","messageId":"104","endLine":44,"endColumn":12,"fix":"105"},{"ruleId":"106","severity":1,"message":"107","line":44,"column":5,"nodeType":"99","messageId":"108","endLine":45,"endColumn":20},{"ruleId":"109","severity":1,"message":"110","line":3,"column":10,"nodeType":"103","messageId":"111","endLine":3,"endColumn":24},{"ruleId":"89","severity":1,"message":"112","line":21,"column":6,"nodeType":"91","endLine":21,"endColumn":8,"suggestions":"113"},{"ruleId":"89","severity":1,"message":"90","line":26,"column":6,"nodeType":"91","endLine":26,"endColumn":8,"suggestions":"114"},{"ruleId":"109","severity":1,"message":"115","line":8,"column":18,"nodeType":"103","messageId":"111","endLine":8,"endColumn":26},{"ruleId":"109","severity":1,"message":"116","line":9,"column":11,"nodeType":"103","messageId":"111","endLine":9,"endColumn":16},{"ruleId":"89","severity":1,"message":"117","line":24,"column":6,"nodeType":"91","endLine":24,"endColumn":8,"suggestions":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["121"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'defualt:' is defined but never used.","Identifier","unused",{"range":"122","text":"123"},"no-unreachable","Unreachable code.","unreachableCode","no-unused-vars","'useGlobalState' is defined but never used.","unusedVar","React Hook useEffect has missing dependencies: 'plantRecordId' and 'shedId'. Either include them or remove the dependency array.",["124"],["125"],"'dispatch' is assigned a value but never used.","'sheds' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'shedId'. Either include it or remove the dependency array.",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},[915,930],"",{"desc":"129","fix":"130"},{"desc":"127","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [dispatch]",{"range":"134","text":"135"},"Update the dependencies array to be: [plantRecordId, shedId]",{"range":"136","text":"137"},{"range":"138","text":"135"},"Update the dependencies array to be: [shedId]",{"range":"139","text":"140"},[1357,1359],"[dispatch]",[721,723],"[plantRecordId, shedId]",[815,817],[741,743],"[shedId]"]