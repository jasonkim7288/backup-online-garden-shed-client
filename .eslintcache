[{"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/index.js":"1","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/globalState.js":"2","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/App.js":"3","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/stateReducer.js":"4","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/api.js":"5","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SearchPlant.js":"6","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/types.js":"7","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SelectedPlantFirstEntry.js":"8","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Navbar.js":"9","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/LandingPage.js":"10","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantRecord.js":"11","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantThumbnails.js":"12","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewRecord.js":"13","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/GardenSheds.js":"14","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewLog.js":"15","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/HamburgerMenu.js":"16","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SignIn.js":"17","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/utilities/date.js":"18","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/index.js":"19","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/App.js":"20","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/globalState.js":"21","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SelectedPlantFirstEntry.js":"22","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SearchPlant.js":"23","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/types.js":"24","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/api.js":"25","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/stateReducer.js":"26","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Navbar.js":"27","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/LandingPage.js":"28","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantThumbnails.js":"29","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewRecord.js":"30","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewLog.js":"31","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantRecord.js":"32","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/GardenSheds.js":"33","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SignIn.js":"34","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/HamburgerMenu.js":"35","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/utilities/date.js":"36","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/FollowingSheds.js":"37","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/MissionStatement.js":"38","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Sidebar.js":"39","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/utilities/strings.js":"40"},{"size":244,"mtime":1607856370897,"results":"41","hashOfConfig":"42"},{"size":463,"mtime":1607856370890,"results":"43","hashOfConfig":"42"},{"size":3070,"mtime":1610362518181,"results":"44","hashOfConfig":"42"},{"size":1124,"mtime":1610273110947,"results":"45","hashOfConfig":"42"},{"size":189,"mtime":1610274374174,"results":"46","hashOfConfig":"42"},{"size":140,"mtime":1607079788503,"results":"47","hashOfConfig":"42"},{"size":249,"mtime":1609987374826,"results":"48","hashOfConfig":"42"},{"size":1984,"mtime":1610347727694,"results":"49","hashOfConfig":"42"},{"size":1672,"mtime":1610362518203,"results":"50","hashOfConfig":"42"},{"size":859,"mtime":1610273110933,"results":"51","hashOfConfig":"42"},{"size":3982,"mtime":1610365867447,"results":"52","hashOfConfig":"42"},{"size":1724,"mtime":1610273110940,"results":"53","hashOfConfig":"42"},{"size":4696,"mtime":1610346706659,"results":"54","hashOfConfig":"42"},{"size":2010,"mtime":1610362518191,"results":"55","hashOfConfig":"42"},{"size":5047,"mtime":1610345596034,"results":"56","hashOfConfig":"42"},{"size":2206,"mtime":1610340037136,"results":"57","hashOfConfig":"42"},{"size":3275,"mtime":1610362518216,"results":"58","hashOfConfig":"42"},{"size":565,"mtime":1610362518224,"results":"59","hashOfConfig":"42"},{"size":244,"mtime":1607856370897,"results":"60","hashOfConfig":"61"},{"size":2405,"mtime":1609987374783,"results":"62","hashOfConfig":"63"},{"size":463,"mtime":1607856370890,"results":"64","hashOfConfig":"63"},{"size":178,"mtime":1607079788509,"results":"65","hashOfConfig":"61"},{"size":140,"mtime":1607079788503,"results":"66","hashOfConfig":"63"},{"size":249,"mtime":1609987374826,"results":"67","hashOfConfig":"61"},{"size":189,"mtime":1608507352431,"results":"68","hashOfConfig":"61"},{"size":1124,"mtime":1609987374824,"results":"69","hashOfConfig":"63"},{"size":904,"mtime":1609987374800,"results":"70","hashOfConfig":"61"},{"size":588,"mtime":1609987374798,"results":"71","hashOfConfig":"63"},{"size":1656,"mtime":1609987374816,"results":"72","hashOfConfig":"63"},{"size":4305,"mtime":1609987374789,"results":"73","hashOfConfig":"61"},{"size":4583,"mtime":1610022139314,"results":"74","hashOfConfig":"61"},{"size":3709,"mtime":1609987374806,"results":"75","hashOfConfig":"61"},{"size":1603,"mtime":1609987374792,"results":"76","hashOfConfig":"61"},{"size":2974,"mtime":1609987374822,"results":"77","hashOfConfig":"61"},{"size":2197,"mtime":1609987374795,"results":"78","hashOfConfig":"63"},{"size":330,"mtime":1609987374831,"results":"79","hashOfConfig":"63"},{"size":158,"mtime":1610100929296,"results":"80","hashOfConfig":"42"},{"size":840,"mtime":1610338897703,"results":"81","hashOfConfig":"42"},{"size":1707,"mtime":1610273110942,"results":"82","hashOfConfig":"42"},{"size":280,"mtime":1610273110949,"results":"83","hashOfConfig":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"131zhv4",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"89"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"89"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"89"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cnn1oq",{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1lywywf",{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/index.js",[],["174","175"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/globalState.js",[],["176","177"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/App.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/stateReducer.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/api.js",["178"],"import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://garden-shed.herokuapp.com',\n  // baseURL: 'http://localhost:8080',\n  timeout: 10000,\n  withCredentials: true\n})","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SearchPlant.js",[],["179","180"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/types.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SelectedPlantFirstEntry.js",["181"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Navbar.js",["182","183","184"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useGlobalState } from '../config/globalState';\nimport { SET_IS_MENU_ON } from '../config/types';\nimport SignIn from './SignIn';\n\nconst Navbar = () => {\n  const { state, dispatch } = useGlobalState();\n  const { isSignedIn, isMenuOn, currentUser } = state;\n  const [ isWindowSmall, setIsWindowSmall] = useState(null);\n\n  const handleClickMenuIcon = () => {\n    dispatch({\n      type: SET_IS_MENU_ON,\n      payload: !isMenuOn\n    })\n  }\n\n  useEffect(() => {\n    const handleResize = () => {\n      // console.log('window.width:', window.innerWidth);\n      if (window.innerWidth < 1200) {\n        setIsWindowSmall(true);\n      } else {\n        setIsWindowSmall(false);\n        dispatch({\n          type: SET_IS_MENU_ON,\n          payload: false\n        })\n      }\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [])\n\n  return (\n    <nav>\n      <div className=\"navbar-wrapper\">\n        <div className=\"navbar container\">\n          <div>\n            <Link to=\"/sheds\">Online Garden Shed</Link>\n          </div>\n          {\n            (isWindowSmall !== null) && (\n              isWindowSmall ?\n                <div className=\"mobile-menu-icon add-hover\" onClick={handleClickMenuIcon}>\n                  <i className=\"fa fa-bars\"></i>\n                </div>\n              :\n                <div>\n                  <SignIn tagType=\"paragraphWithIcon\"/>\n                </div>\n            )\n          }\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/LandingPage.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantRecord.js",["185","186"],"import React, { useState, useEffect } from 'react'\nimport { useParams, Link, useHistory } from 'react-router-dom';\nimport { useGlobalState } from '../config/globalState';\nimport api from '../config/api';\nimport { convertStringToDateString } from '../utilities/date';\n\nconst PlantRecord = () => {\n  const [plantRecord, setPlantRecord] = useState(null);\n  const { shedId, plantRecordId } = useParams();\n  let history = useHistory();\n\n  useEffect(() => {\n    const findPlantRecord = async () => {\n      const res = await api(`/api/sheds/${shedId}/records/${plantRecordId}`);\n      const foundPlantRecord = res.data;\n      console.log('found Plant record:', foundPlantRecord);\n      if(foundPlantRecord) {\n        setPlantRecord(foundPlantRecord);\n      }\n    }\n    findPlantRecord();\n  }, []);\n\n  const handleClickNewLog = () => {\n    history.push(`/sheds/${shedId}/records/${plantRecordId}/logs/new`);\n  }\n  return (\n    <div>\n      {\n        plantRecord &&\n          <>\n            <p className=\"path\">\n              <Link to={`/sheds/${shedId}`}> {`${plantRecord.ownedShed.owner.email}`}</Link>\n              {` > ${plantRecord.commonName}`}\n            </p>\n            <div className=\"icon icon-record icon-record-follow\">\n              <i className=\"fas fa-leaf\"></i>\n            </div>\n\n            <Link to={`/sheds/${shedId}/records/${plantRecordId}/first-entry`} className=\"button-wrapper\">\n              <button className=\"about\" type=\"button\">About</button>\n            </Link>\n            <div className=\"button-wrapper\">\n              <button onClick={handleClickNewLog} className=\"new-log\" type=\"button\">Creat a new log</button>\n            </div>\n\n            {\n              plantRecord.plantLogs.map((plantLog, index) => \n                <div key={index}> \n                  {\n                    plantLog.photos && plantLog.photos.length > 0 && \n                      <div className=\"plant-log-container\">\n                        <div className=\"plant-log-main-wrapper\">\n                          <img className=\"main-image\" src={plantLog.photos[plantLog.mainPhotoIndex]}  alt=\"main\"/>\n                        </div>\n\n                        {\n                          plantLog.photos.map((photo, photoIndex) => \n                            <div key={photoIndex}\n                              onClick={() => {\n                                setPlantRecord({\n                                  ...plantRecord,\n                                  plantLogs:  plantRecord.plantLogs.map((element, idx) => \n                                    (idx === index) ? \n                                      ({\n                                        ...element, \n                                        mainPhotoIndex: photoIndex\n                                      })\n                                    :\n                                      element\n                                  )\n                                });\n                              }}  \n                              className={`thumbnail-${photoIndex + 1}`}>\n                              <img className=\"thumbnail\" src={photo} alt=\"thumbnail\"/>\n                            </div>\n                          )\n                        }\n                      </div>\n                  }\n\n                  <div className=\"icon icon-record icon-record-delete\">\n                    <i className=\"far fa-trash-alt\"></i>\n                  </div>\n                  <div className=\"icon icon-record icon-record-edit\">\n                    <i className=\"far fa-edit\"></i>\n                  </div>\n\n                  <p className=\"sub-headings\"><strong>Date:</strong> {convertStringToDateString(plantLog.createdAt)} (Day 1) Need to make this dynamic</p>\n                  <p className=\"sub-headings\"><strong>My Notes:</strong></p>\n                  <p className=\"my-notes\">{plantLog.notes}</p>\n                </div> \n              )\n            }\n          </>\n      }\n    </div>\n  )\n}\n\nexport default PlantRecord\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantThumbnails.js",["187","188","189"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewRecord.js",["190","191","192"],"import React, { useState, useEffect } from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport api from '../config/api';\nimport axios from 'axios';\nimport { getCurrentDate } from '../utilities/date';\nimport { useGlobalState } from '../config/globalState';\n\nconst CreateNewRecord = () => {\n  const [shed, setShed] = useState(null);\n  const [searchText, setSearchText] = useState('');\n  const [plants, setPlants] = useState(null);\n  const { shedId } = useParams();\n  const [plantIndex, setPlantIndex] = useState(null);\n  const [description, setDescription] = useState('');\n  const { state } = useGlobalState();\n  const { isSignedIn } = state;\n  let history = useHistory();\n\n  useEffect(() => {\n    if (!isSignedIn) {\n      history.push('/');\n      return;\n    }\n\n    const findShed = async () => {\n      try {\n        const res = await api.get(`/api/sheds/${shedId}`);\n        const foundShed = res.data;\n        console.log('foundShed:', foundShed);\n        if(foundShed) {\n          setShed(foundShed);\n        }\n      } catch (error) {\n        console.log('error.response: ', error.response);\n      }\n    }\n    findShed();\n  }, []);\n\n  const handleSearch = async (event) => {\n    event.preventDefault();\n    const res = await api.get(`api/plants?q=${searchText}`);\n    console.log(res);\n    setPlants(res.data);\n  }\n\n  const handleChangeSearch = (event) => {\n    setSearchText(event.target.value);\n  }\n\n  const handleClick = (event, index) => {\n    console.log(index);\n    setPlantIndex(index);\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const res = await api.post(`api/sheds/${shedId}/records`,\n        {\n          commonName: plants[plantIndex].common_name,\n          scientificName: plants[plantIndex].scientific_name,\n          familyCommonName: plants[plantIndex].family_common_name,\n          recordPhoto: plants[plantIndex].image_url,\n          description\n        });\n      console.log(res.data);\n      history.push(`/sheds/${shedId}/records/${res.data._id}`);\n    } catch (error) {\n      console.log(error.response)\n    }\n    \n  }\n\n  const handleChangeDescription = (event) => {\n    setDescription(event.target.value);\n  }\n  return (\n    <div>\n      {\n        shed &&\n          <>\n            <p className=\"path\">{shed.owner.email}</p>\n            <h1 className=\"title\">Create New Record</h1>\n            <p className=\"current-date\">{`Date: ${getCurrentDate()}`}</p>\n            {\n              plantIndex === null ?\n                <>\n                  <form onSubmit={handleSearch}>\n                    <div className=\"input-content-wrapper\">\n                      <input className=\"input-content\" placeholder=\"Search keywords\" autoFocus type=\"text\" value={searchText} onChange={handleChangeSearch}/>\n                      <button className=\"input-button\" type=\"submit\">Search</button>\n                    </div>\n                  </form>\n                  {\n                    plants &&\n                    <>\n                      <h2>{`Searched results for \"${searchText}\"`} </h2>\n                      {\n                        plants.map((plant, index) => (\n                          <div className=\"api-wrapper\" key={plant.id} onClick={(event) => handleClick(event, index)}>\n                            <img className=\"api-image\" src={plant.image_url} alt=\"\"/>\n                            <p><strong>Common name:</strong>&nbsp;{plant.common_name}</p>\n                            <p><strong>Scientific name:</strong>&nbsp;{plant.scientific_name}</p>\n                            <p><strong>Family common name:</strong>&nbsp;{plant.family_common_name}</p>\n                          </div>\n                        ))\n                      }\n                    </>\n                  }\n                </>\n              :\n                <div className=\"api-wrapper\" key={plants[plantIndex].id}>\n                  <img className=\"api-image\" src={plants[plantIndex].image_url} alt=\"\"/>\n                  <p><strong>Common name:</strong>&nbsp;{plants[plantIndex].common_name}</p>\n                  <p><strong>Scientific name:</strong>&nbsp;{plants[plantIndex].scientific_name}</p>\n                  <p><strong>Family common name:</strong>&nbsp;{plants[plantIndex].family_common_name}</p>\n                  <form onSubmit={handleSubmit}>\n                    <textarea id=\"description-input\" name=\"description\" rows=\"10\" placeholder=\"Description\" value={description} onChange={handleChangeDescription}/>\n                    <button type=\"submit\">Create a new record</button>\n                  </form>\n                </div>\n            }\n\n          </>\n      }\n    </div>\n  )\n}\n\nexport default CreateNewRecord\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/GardenSheds.js",["193"],"import React, { useEffect } from 'react';\nimport api from '../config/api';\nimport { useGlobalState } from '../config/globalState';\nimport { SET_SHEDS } from '../config/types';\nimport { Link } from 'react-router-dom'\nimport { removeDomain } from '../utilities/strings';\n\n\nconst GardenSheds = () => {\n  const { state, dispatch } = useGlobalState();\n  const { sheds } = state;\n\n  useEffect(() => {\n    const getCurrentSheds = async () => {\n      try {\n        const res = await api.get('/api/sheds');\n        dispatch({\n          type: SET_SHEDS,\n          payload: res.data\n        });\n      } catch (error) { \n        console.log('error.response: ', error.response);\n      }\n    };\n    getCurrentSheds();\n  }, []);\n\n  console.log('sheds: ',sheds)\n\n  return (\n    <div>\n      <div id=\"garden-sheds-container\">\n        {\n          sheds.length > 0 &&\n          sheds.map(shed => (\n            shed.plantRecords.length > 0 && (\n              <Link to={`/sheds/${shed._id}`} key={shed._id} className=\"garden-shed-wrapper\">\n                <div className=\"garden-shed-image-wrapper\">\n                  <img className=\"garden-shed-image\"\n                    src={shed.plantRecords[0].recordPhoto}\n                    alt=\"Garden shed\"\n                  />\n                  <img className=\"garden-shed-image-frame\"\n                    src={`${process.env.PUBLIC_URL}/gardenShedFrame.png`}\n                    alt=\"Garden shed frame\"\n                  />\n                </div>\n                <div>\n                <p className=\"garden-shed-owner\">{removeDomain(shed.owner.email)}</p>\n                {\n                  shed.plantRecords.length > 0 && (\n                    <p className=\"garden-shed-plants-list\">\n                      {shed.plantRecords.map(plantRecord => plantRecord.commonName).join(', ')}\n                    </p>\n                  )\n                }\n                </div>\n              </Link>\n            )\n          ))\n        }\n\n      </div>\n    </div>\n  );\n}\n\nexport default GardenSheds;\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewLog.js",["194","195"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/HamburgerMenu.js",["196"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SignIn.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/utilities/date.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/index.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/App.js",["197"],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/globalState.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SelectedPlantFirstEntry.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SearchPlant.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/types.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/api.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/stateReducer.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Navbar.js",["198"],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/LandingPage.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantThumbnails.js",["199","200","201"],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewRecord.js",["202","203","204"],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewLog.js",["205","206"],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantRecord.js",["207","208"],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/GardenSheds.js",["209"],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SignIn.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/HamburgerMenu.js",["210"],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/utilities/date.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/FollowingSheds.js",[],["211","212"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/MissionStatement.js",[],["213","214"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Sidebar.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/utilities/strings.js",[],{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"215","replacedBy":"219"},{"ruleId":"217","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":5,"column":3,"nodeType":"223","messageId":"224","endLine":5,"endColumn":10},{"ruleId":"215","replacedBy":"225"},{"ruleId":"217","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":34,"column":6,"nodeType":"229","endLine":34,"endColumn":8,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":9,"column":11,"nodeType":"233","messageId":"234","endLine":9,"endColumn":21},{"ruleId":"231","severity":1,"message":"235","line":9,"column":33,"nodeType":"233","messageId":"234","endLine":9,"endColumn":44},{"ruleId":"227","severity":1,"message":"236","line":35,"column":6,"nodeType":"229","endLine":35,"endColumn":8,"suggestions":"237"},{"ruleId":"231","severity":1,"message":"238","line":3,"column":10,"nodeType":"233","messageId":"234","endLine":3,"endColumn":24},{"ruleId":"227","severity":1,"message":"239","line":22,"column":6,"nodeType":"229","endLine":22,"endColumn":8,"suggestions":"240"},{"ruleId":"231","severity":1,"message":"241","line":9,"column":18,"nodeType":"233","messageId":"234","endLine":9,"endColumn":26},{"ruleId":"231","severity":1,"message":"242","line":10,"column":11,"nodeType":"233","messageId":"234","endLine":10,"endColumn":16},{"ruleId":"227","severity":1,"message":"243","line":24,"column":6,"nodeType":"229","endLine":24,"endColumn":8,"suggestions":"244"},{"ruleId":"231","severity":1,"message":"245","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},{"ruleId":"231","severity":1,"message":"246","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":13},{"ruleId":"227","severity":1,"message":"247","line":38,"column":6,"nodeType":"229","endLine":38,"endColumn":8,"suggestions":"248"},{"ruleId":"227","severity":1,"message":"236","line":26,"column":6,"nodeType":"229","endLine":26,"endColumn":8,"suggestions":"249"},{"ruleId":"227","severity":1,"message":"239","line":39,"column":6,"nodeType":"229","endLine":39,"endColumn":8,"suggestions":"250"},{"ruleId":"227","severity":1,"message":"251","line":45,"column":6,"nodeType":"229","endLine":45,"endColumn":17,"suggestions":"252"},{"ruleId":"231","severity":1,"message":"245","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},{"ruleId":"227","severity":1,"message":"236","line":43,"column":6,"nodeType":"229","endLine":43,"endColumn":8,"suggestions":"253"},{"ruleId":"231","severity":1,"message":"254","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"241","line":8,"column":18,"nodeType":"233","messageId":"234","endLine":8,"endColumn":26},{"ruleId":"231","severity":1,"message":"242","line":9,"column":11,"nodeType":"233","messageId":"234","endLine":9,"endColumn":16},{"ruleId":"227","severity":1,"message":"243","line":23,"column":6,"nodeType":"229","endLine":23,"endColumn":8,"suggestions":"255"},{"ruleId":"231","severity":1,"message":"245","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},{"ruleId":"231","severity":1,"message":"246","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":13},{"ruleId":"227","severity":1,"message":"243","line":26,"column":6,"nodeType":"229","endLine":26,"endColumn":8,"suggestions":"256"},{"ruleId":"231","severity":1,"message":"257","line":20,"column":7,"nodeType":"233","messageId":"234","endLine":20,"endColumn":14},{"ruleId":"227","severity":1,"message":"239","line":33,"column":6,"nodeType":"229","endLine":33,"endColumn":8,"suggestions":"258"},{"ruleId":"231","severity":1,"message":"238","line":3,"column":10,"nodeType":"233","messageId":"234","endLine":3,"endColumn":24},{"ruleId":"227","severity":1,"message":"239","line":21,"column":6,"nodeType":"229","endLine":21,"endColumn":8,"suggestions":"259"},{"ruleId":"227","severity":1,"message":"236","line":20,"column":6,"nodeType":"229","endLine":20,"endColumn":8,"suggestions":"260"},{"ruleId":"231","severity":1,"message":"245","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},{"ruleId":"215","replacedBy":"261"},{"ruleId":"217","replacedBy":"262"},{"ruleId":"215","replacedBy":"263"},{"ruleId":"217","replacedBy":"264"},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],["265"],["266"],"no-dupe-keys","Duplicate key 'baseURL'.","ObjectExpression","unexpected",["265"],["266"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'isSignedIn', 'plantRecordId', and 'shedId'. Either include them or remove the dependency array.","ArrayExpression",["267"],"no-unused-vars","'isSignedIn' is assigned a value but never used.","Identifier","unusedVar","'currentUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["268"],"'useGlobalState' is defined but never used.","React Hook useEffect has missing dependencies: 'plantRecordId' and 'shedId'. Either include them or remove the dependency array.",["269"],"'dispatch' is assigned a value but never used.","'sheds' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'shedId'. Either include it or remove the dependency array.",["270"],"'Link' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'isSignedIn', and 'shedId'. Either include them or remove the dependency array.",["271"],["272"],["273"],"React Hook useEffect has missing dependencies: 'filesToUpload' and 'readAndPreview'. Either include them or remove the dependency array.",["274"],["275"],"'useState' is defined but never used.",["276"],["277"],"'history' is assigned a value but never used.",["278"],["279"],["280"],["265"],["266"],["265"],["266"],"no-global-assign","no-unsafe-negation",{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"283","fix":"291"},{"desc":"285","fix":"292"},{"desc":"293","fix":"294"},{"desc":"283","fix":"295"},{"desc":"287","fix":"296"},{"desc":"287","fix":"297"},{"desc":"285","fix":"298"},{"desc":"285","fix":"299"},{"desc":"283","fix":"300"},"Update the dependencies array to be: [history, isSignedIn, plantRecordId, shedId]",{"range":"301","text":"302"},"Update the dependencies array to be: [dispatch]",{"range":"303","text":"304"},"Update the dependencies array to be: [plantRecordId, shedId]",{"range":"305","text":"306"},"Update the dependencies array to be: [shedId]",{"range":"307","text":"308"},"Update the dependencies array to be: [history, isSignedIn, shedId]",{"range":"309","text":"310"},{"range":"311","text":"304"},{"range":"312","text":"306"},"Update the dependencies array to be: [filePaths, filesToUpload, readAndPreview]",{"range":"313","text":"314"},{"range":"315","text":"304"},{"range":"316","text":"308"},{"range":"317","text":"308"},{"range":"318","text":"306"},{"range":"319","text":"306"},{"range":"320","text":"304"},[1048,1050],"[history, isSignedIn, plantRecordId, shedId]",[1015,1017],"[dispatch]",[786,788],"[plantRecordId, shedId]",[780,782],"[shedId]",[1157,1159],"[history, isSignedIn, shedId]",[709,711],[1370,1372],[1573,1584],"[filePaths, filesToUpload, readAndPreview]",[1468,1470],[721,723],[845,847],[1149,1151],[723,725],[489,491]]