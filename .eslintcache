[{"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/index.js":"1","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/globalState.js":"2","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/App.js":"3","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/stateReducer.js":"4","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/api.js":"5","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/About.js":"6","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SearchPlant.js":"7","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/types.js":"8","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SelectedPlantFirstEntry.js":"9","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Navbar.js":"10","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/LandingPage.js":"11","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantRecord.js":"12","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantThumbnails.js":"13","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewRecord.js":"14","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/GardenSheds.js":"15","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewLog.js":"16","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/HamburgerMenu.js":"17","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SignIn.js":"18","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/utilities/date.js":"19","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/index.js":"20","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/App.js":"21","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/globalState.js":"22","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/About.js":"23","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SelectedPlantFirstEntry.js":"24","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SearchPlant.js":"25","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/types.js":"26","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/api.js":"27","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/stateReducer.js":"28","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Navbar.js":"29","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/LandingPage.js":"30","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantThumbnails.js":"31","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewRecord.js":"32","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewLog.js":"33","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantRecord.js":"34","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/GardenSheds.js":"35","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SignIn.js":"36","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/HamburgerMenu.js":"37","/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/utilities/date.js":"38","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/FollowingSheds.js":"39","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/MissionStatement.js":"40","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Sidebar.js":"41"},{"size":244,"mtime":1607856370897,"results":"42","hashOfConfig":"43"},{"size":463,"mtime":1607856370890,"results":"44","hashOfConfig":"45"},{"size":3151,"mtime":1610100929290,"results":"46","hashOfConfig":"43"},{"size":1124,"mtime":1610273110947,"results":"47","hashOfConfig":"43"},{"size":189,"mtime":1610274374174,"results":"48","hashOfConfig":"43"},{"size":133,"mtime":1607079788489,"results":"49","hashOfConfig":"43"},{"size":140,"mtime":1607079788503,"results":"50","hashOfConfig":"43"},{"size":249,"mtime":1609987374826,"results":"51","hashOfConfig":"43"},{"size":178,"mtime":1607079788509,"results":"52","hashOfConfig":"43"},{"size":1681,"mtime":1610100929309,"results":"53","hashOfConfig":"43"},{"size":588,"mtime":1609987374798,"results":"54","hashOfConfig":"45"},{"size":3709,"mtime":1609987374806,"results":"55","hashOfConfig":"43"},{"size":1656,"mtime":1609987374816,"results":"56","hashOfConfig":"45"},{"size":4305,"mtime":1609987374789,"results":"57","hashOfConfig":"45"},{"size":1930,"mtime":1610109296661,"results":"58","hashOfConfig":"43"},{"size":4897,"mtime":1610280451639,"results":"59","hashOfConfig":"43"},{"size":2244,"mtime":1610100929300,"results":"60","hashOfConfig":"43"},{"size":3273,"mtime":1610100929315,"results":"61","hashOfConfig":"43"},{"size":330,"mtime":1609987374831,"results":"62","hashOfConfig":"43"},{"size":244,"mtime":1607856370897,"results":"63","hashOfConfig":"64"},{"size":2405,"mtime":1609987374783,"results":"65","hashOfConfig":"66"},{"size":463,"mtime":1607856370890,"results":"67","hashOfConfig":"66"},{"size":133,"mtime":1607079788489,"results":"68","hashOfConfig":"64"},{"size":178,"mtime":1607079788509,"results":"69","hashOfConfig":"64"},{"size":140,"mtime":1607079788503,"results":"70","hashOfConfig":"66"},{"size":249,"mtime":1609987374826,"results":"71","hashOfConfig":"64"},{"size":189,"mtime":1608507352431,"results":"72","hashOfConfig":"64"},{"size":1124,"mtime":1609987374824,"results":"73","hashOfConfig":"66"},{"size":904,"mtime":1609987374800,"results":"74","hashOfConfig":"64"},{"size":588,"mtime":1609987374798,"results":"75","hashOfConfig":"66"},{"size":1656,"mtime":1609987374816,"results":"76","hashOfConfig":"66"},{"size":4305,"mtime":1609987374789,"results":"77","hashOfConfig":"64"},{"size":4583,"mtime":1610022139314,"results":"78","hashOfConfig":"64"},{"size":3709,"mtime":1609987374806,"results":"79","hashOfConfig":"64"},{"size":1603,"mtime":1609987374792,"results":"80","hashOfConfig":"64"},{"size":2974,"mtime":1609987374822,"results":"81","hashOfConfig":"64"},{"size":2197,"mtime":1609987374795,"results":"82","hashOfConfig":"66"},{"size":330,"mtime":1609987374831,"results":"83","hashOfConfig":"66"},{"size":158,"mtime":1610100929296,"results":"84","hashOfConfig":"43"},{"size":159,"mtime":1610100929305,"results":"85","hashOfConfig":"43"},{"size":1707,"mtime":1610273110942,"results":"86","hashOfConfig":"43"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"131zhv4",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1ktzwsg",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cnn1oq",{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1lywywf",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/index.js",[],["177","178"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/globalState.js",[],["179","180"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/App.js",[],["181","182"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/stateReducer.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/api.js",["183"],"import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://garden-shed.herokuapp.com',\n  // baseURL: 'http://localhost:8080',\n  timeout: 10000,\n  withCredentials: true\n})","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/About.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SearchPlant.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/types.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SelectedPlantFirstEntry.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Navbar.js",["184","185"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/LandingPage.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantRecord.js",["186","187"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantThumbnails.js",["188","189","190"],"import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useGlobalState } from '../config/globalState';\nimport api from '../config/api';\n\n\nconst PlantThumbnails = () => {\n  const { state, dispatch } = useGlobalState();\n  const { sheds } = state;\n  const [shed, setShed] = useState(null);\n  const { shedId } = useParams();\n  useEffect(() => {\n    // const foundShed = sheds.find(element => element._id === shedId);\n    const findShed = async () => {\n      const res = await api(`/api/sheds/${shedId}`);\n      const foundShed = res.data;\n      console.log('foundShed:', foundShed);\n      if(foundShed) {\n        setShed(foundShed);\n      }\n    }\n    findShed();\n  }, []);\n  console.log('shed:', shed);\n  return (\n    <div>\n      <button type=\"button\" onClick={async () => {\n        const res = await api.get(`/api/sheds/${shedId}/toggle-follow`);\n        console.log('res.data:', res.data);\n      }}>follow</button>\n      {\n        shed &&\n          <>\n            <p className=\"path\">{shed.owner.email}</p>\n            <div id=\"plant-thumbnails-container\">\n              {shed.plantRecords.map(plantRecord => (\n                <Link to={`/sheds/${shedId}/records/${plantRecord._id}`} key={plantRecord._id}>\n                  <div className=\"plant-thumbnail-wrapper\">\n                    <img className=\"plant-thumbnail\" src={plantRecord.recordPhoto} alt=\"\"/>\n                    <p className=\"plant-thumbnail-name\">{plantRecord.commonName}</p>\n                  </div>\n                </Link>\n              ))}\n            </div>\n          </>\n      }\n    </div>\n  )\n}\n\nexport default PlantThumbnails\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewRecord.js",["191","192","193"],"import React, { useState, useEffect } from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport api from '../config/api';\nimport axios from 'axios';\nimport { getCurrentDate } from '../utilities/date';\n\nconst CreateNewRecord = () => {\n  const [shed, setShed] = useState(null);\n  const [searchText, setSearchText] = useState('');\n  const [plants, setPlants] = useState(null);\n  const { shedId } = useParams();\n  const [plantIndex, setPlantIndex] = useState(null);\n  const [description, setDescription] = useState('');\n  let history = useHistory();\n\n  useEffect(() => {\n    const findShed = async () => {\n      const res = await api(`/api/sheds/${shedId}`);\n      const foundShed = res.data;\n      console.log('foundShed:', foundShed);\n      if(foundShed) {\n        setShed(foundShed);\n      }\n    }\n    findShed();\n  }, []);\n\n  const handleSearch = async (event) => {\n    event.preventDefault();\n    const res = await api.get(`api/plants?q=${searchText}`);\n    console.log(res);\n    setPlants(res.data);\n  }\n\n  const handleChangeSearch = (event) => {\n    setSearchText(event.target.value);\n  }\n\n  const handleClick = (event, index) => {\n    console.log(index);\n    setPlantIndex(index);\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const res = await api.post(`api/sheds/${shedId}/records`,\n      {\n        commonName: plants[plantIndex].common_name,\n        scientificName: plants[plantIndex].scientific_name,\n        familyCommonName: plants[plantIndex].family_common_name,\n        recordPhoto: plants[plantIndex].image_url,\n        description\n      });\n      console.log(res.data);\n      history.push(`/sheds/${shedId}/records/${res.data._id}`);\n  }\n\n  const handleChangeDescription = (event) => {\n    setDescription(event.target.value);\n  }\n  return (\n    <div>\n      {\n        shed &&\n          <>\n            <p className=\"path\">{shed.owner.email}</p>\n            <h1 className=\"title\">Create New Record</h1>\n            <p className=\"current-date\">{`Date: ${getCurrentDate()}`}</p>\n            {\n              plantIndex === null ?\n                <>\n                  <form onSubmit={handleSearch}>\n                    <div className=\"input-content-wrapper\">\n                      <input className=\"input-content\" placeholder=\"Search keywords\" autoFocus type=\"text\" value={searchText} onChange={handleChangeSearch}/>\n                      <button className=\"input-button\" type=\"submit\">Search</button>\n                    </div>\n                  </form>\n                  {\n                    plants &&\n                    <>\n                      <h2>{`Searched results for \"${searchText}\"`} </h2>\n                      {\n                        plants.map((plant, index) => (\n                          <div className=\"api-wrapper\" key={plant.id} onClick={(event) => handleClick(event, index)}>\n                            <img className=\"api-image\" src={plant.image_url} alt=\"\"/>\n                            <p><strong>Common name:</strong>&nbsp;{plant.common_name}</p>\n                            <p><strong>Scientific name:</strong>&nbsp;{plant.scientific_name}</p>\n                            <p><strong>Family common name:</strong>&nbsp;{plant.family_common_name}</p>\n                          </div>  \n                        ))\n                      }\n                    </>\n                  }\n                </>\n              :\n                <div className=\"api-wrapper\" key={plants[plantIndex].id}>\n                  <img className=\"api-image\" src={plants[plantIndex].image_url} alt=\"\"/>\n                  <p><strong>Common name:</strong>&nbsp;{plants[plantIndex].common_name}</p>\n                  <p><strong>Scientific name:</strong>&nbsp;{plants[plantIndex].scientific_name}</p>\n                  <p><strong>Family common name:</strong>&nbsp;{plants[plantIndex].family_common_name}</p>\n                  <form onSubmit={handleSubmit}>\n                    <textarea id=\"description-input\" name=\"description\" rows=\"10\" placeholder=\"Description\" value={description} onChange={handleChangeDescription}/>\n                    <button type=\"submit\">Create a new record</button>\n                  </form>\n                </div>\n            }\n            \n          </>\n      }\n    </div>\n  )\n}\n\nexport default CreateNewRecord\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/GardenSheds.js",["194"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewLog.js",["195","196"],"import React, { useState, useEffect } from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport api from '../config/api';\nimport { getCurrentDate } from '../utilities/date';\nimport { uploadFile } from 'react-s3';\n\n\nconst config = {\n  bucketName: process.env.REACT_APP_AWS_BUCKET_NAME,\n  region: 'ap-southeast-2',\n  accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID,\n  secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY\n};\n\nconst CreateNewLog = () => {\n  const { shedId, plantRecordId } = useParams();\n  const [plantRecord, setPlantRecord] = useState(null);\n  const [notes, setNotes] = useState(null);\n  const [filesToUpload, setFilesToUpload] = useState(null);\n  const [filePaths, setFilePaths] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  let history = useHistory();\n\n  useEffect(() => {\n    const findPlantRecord = async () => {\n      const res = await api(`/api/sheds/${shedId}/records/${plantRecordId}`);\n      const foundPlantRecord = res.data;\n      console.log('found Plant record:', foundPlantRecord);\n      if(foundPlantRecord) {\n        setPlantRecord(foundPlantRecord);\n        console.log(new Date(foundPlantRecord.createdAt));\n      }\n    }\n    findPlantRecord();\n  }, []);\n\n  useEffect(() => {\n    if (filesToUpload && filePaths && filesToUpload.length !== 0 && filesToUpload.length > filePaths.length) {\n      readAndPreview(filesToUpload[filePaths.length]);\n    }\n  }, [filePaths])\n\n  const handleSubmit = async event => {\n    let fileLocations = [];\n    event.preventDefault();\n    for(let i = 0; i < filesToUpload.length; i++) {\n      try {\n        const data = await uploadFile(filesToUpload[i], config);\n        console.log(data);\n        fileLocations.push(data.location);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    console.log('fileLocations:', fileLocations);\n    let newLog = {\n      photos: [],\n      note: notes \n    };\n    newLog.photos = fileLocations.map((fileLocation, index) => ({\n      photo: fileLocation,\n      isMain: index === currentIndex\n    }));\n    const res = await api.post(`api/sheds/${shedId}/records/${plantRecordId}/logs`, newLog);\n    console.log(res.data);\n    history.push(`/sheds/${shedId}/records/${plantRecordId}`);\n  };\n\n  const handleChangeNotes = event => {\n    setNotes(event.target.value);\n  };\n\n  const readAndPreview = file => {\n    let reader = new FileReader();\n\n    reader.addEventListener('load', () => {\n      console.log('reader.result:', file.name);\n      setFilePaths([...filePaths, reader.result]);\n      console.log('filePaths.length:', filePaths.length);\n\n    }, false);\n    reader.readAsDataURL(file);\n  };\n\n  const handleChangeFiles = event => {\n    console.log('event.target.files:', event.target.files);\n\n    const { files } = event.target;\n    setFilesToUpload(files);\n    setFilePaths([]);\n    setCurrentIndex(0);\n    // [].forEach.call(files, readAndPreview);\n  };\n\n  const handleChangeMain = event => {\n    console.log('event.target.value:', typeof event.target.value); \n    setCurrentIndex(parseInt(event.target.value));\n  };\n\n  return (\n    <div>\n      {\n        plantRecord &&\n          <>\n            <p className=\"path\">\n              <Link to={`/sheds/${shedId}`}> {`${plantRecord.ownedShed.owner.email}`}</Link>{` > ${plantRecord.commonName}`}\n            </p>\n          </>\n      }\n      <h1 className=\"title\">Create New Log</h1>\n      <p className=\"current-date\">{`Date: ${getCurrentDate()}`}</p>\n      <form onSubmit={handleSubmit}>\n        <textarea id=\"description-input\" name=\"description\" rows=\"5\" placeholder=\"Notes\" value={notes} onChange={handleChangeNotes}/>\n        <input multiple onChange={handleChangeFiles} type=\"file\" name=\"image-upload\"/>\n\n        {\n          filePaths && filePaths.length > 0 && \n          <>\n            <p id=\"select-main-image\">Select Main Image</p>\n            <div className=\"radio-wrapper\">\n              {\n                filePaths.map((file, index) => (\n                  <input \n                    type=\"radio\" \n                    className=\"thumbnail-radio-button\" \n                    name=\"thumbnail-radio-button\" \n                    key={index}\n                    value={index}\n                    onChange={handleChangeMain}\n                    checked={index === currentIndex}\n                  />\n                ))\n              }\n            </div>\n            <div className=\"thumbnails-wrapper\">\n              {\n                filePaths.map((file, index) => (\n                  <img key={index} className=\"log-thumbnail\" src={file} alt=\"thumbnail\"/>\n                ))\n              }\n            </div>\n\n            <img className=\"log-selected-thumbnail\" src={filePaths[currentIndex]} alt=\"seleted thumbnail main plant\"/>\n          </>\n        }\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateNewLog\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/HamburgerMenu.js",["197"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SignIn.js",[],["198","199"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/utilities/date.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/index.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/App.js",["200"],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/globalState.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/About.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SelectedPlantFirstEntry.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SearchPlant.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/types.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/api.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/stateReducer.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Navbar.js",["201"],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/LandingPage.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantThumbnails.js",["202","203","204"],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewRecord.js",["205","206","207"],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewLog.js",["208","209"],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantRecord.js",["210","211"],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/GardenSheds.js",["212"],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SignIn.js",[],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/HamburgerMenu.js",["213"],"/mnt/c/Users/thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/utilities/date.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/FollowingSheds.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/MissionStatement.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Sidebar.js",[],{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"214","replacedBy":"218"},{"ruleId":"216","replacedBy":"219"},{"ruleId":"214","replacedBy":"220"},{"ruleId":"216","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":5,"column":3,"nodeType":"224","messageId":"225","endLine":5,"endColumn":10},{"ruleId":"226","severity":1,"message":"227","line":9,"column":33,"nodeType":"228","messageId":"229","endLine":9,"endColumn":44},{"ruleId":"230","severity":1,"message":"231","line":35,"column":6,"nodeType":"232","endLine":35,"endColumn":8,"suggestions":"233"},{"ruleId":"226","severity":1,"message":"234","line":3,"column":10,"nodeType":"228","messageId":"229","endLine":3,"endColumn":24},{"ruleId":"230","severity":1,"message":"235","line":21,"column":6,"nodeType":"232","endLine":21,"endColumn":8,"suggestions":"236"},{"ruleId":"226","severity":1,"message":"237","line":8,"column":18,"nodeType":"228","messageId":"229","endLine":8,"endColumn":26},{"ruleId":"226","severity":1,"message":"238","line":9,"column":11,"nodeType":"228","messageId":"229","endLine":9,"endColumn":16},{"ruleId":"230","severity":1,"message":"239","line":23,"column":6,"nodeType":"232","endLine":23,"endColumn":8,"suggestions":"240"},{"ruleId":"226","severity":1,"message":"241","line":2,"column":10,"nodeType":"228","messageId":"229","endLine":2,"endColumn":14},{"ruleId":"226","severity":1,"message":"242","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":13},{"ruleId":"230","severity":1,"message":"239","line":26,"column":6,"nodeType":"232","endLine":26,"endColumn":8,"suggestions":"243"},{"ruleId":"230","severity":1,"message":"231","line":20,"column":6,"nodeType":"232","endLine":20,"endColumn":8,"suggestions":"244"},{"ruleId":"230","severity":1,"message":"235","line":35,"column":6,"nodeType":"232","endLine":35,"endColumn":8,"suggestions":"245"},{"ruleId":"230","severity":1,"message":"246","line":41,"column":6,"nodeType":"232","endLine":41,"endColumn":17,"suggestions":"247"},{"ruleId":"226","severity":1,"message":"241","line":2,"column":10,"nodeType":"228","messageId":"229","endLine":2,"endColumn":14},{"ruleId":"214","replacedBy":"248"},{"ruleId":"216","replacedBy":"249"},{"ruleId":"230","severity":1,"message":"231","line":43,"column":6,"nodeType":"232","endLine":43,"endColumn":8,"suggestions":"250"},{"ruleId":"226","severity":1,"message":"251","line":1,"column":17,"nodeType":"228","messageId":"229","endLine":1,"endColumn":25},{"ruleId":"226","severity":1,"message":"237","line":8,"column":18,"nodeType":"228","messageId":"229","endLine":8,"endColumn":26},{"ruleId":"226","severity":1,"message":"238","line":9,"column":11,"nodeType":"228","messageId":"229","endLine":9,"endColumn":16},{"ruleId":"230","severity":1,"message":"239","line":23,"column":6,"nodeType":"232","endLine":23,"endColumn":8,"suggestions":"252"},{"ruleId":"226","severity":1,"message":"241","line":2,"column":10,"nodeType":"228","messageId":"229","endLine":2,"endColumn":14},{"ruleId":"226","severity":1,"message":"242","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":13},{"ruleId":"230","severity":1,"message":"239","line":26,"column":6,"nodeType":"232","endLine":26,"endColumn":8,"suggestions":"253"},{"ruleId":"226","severity":1,"message":"254","line":20,"column":7,"nodeType":"228","messageId":"229","endLine":20,"endColumn":14},{"ruleId":"230","severity":1,"message":"235","line":33,"column":6,"nodeType":"232","endLine":33,"endColumn":8,"suggestions":"255"},{"ruleId":"226","severity":1,"message":"234","line":3,"column":10,"nodeType":"228","messageId":"229","endLine":3,"endColumn":24},{"ruleId":"230","severity":1,"message":"235","line":21,"column":6,"nodeType":"232","endLine":21,"endColumn":8,"suggestions":"256"},{"ruleId":"230","severity":1,"message":"231","line":20,"column":6,"nodeType":"232","endLine":20,"endColumn":8,"suggestions":"257"},{"ruleId":"226","severity":1,"message":"241","line":2,"column":10,"nodeType":"228","messageId":"229","endLine":2,"endColumn":14},"no-native-reassign",["258"],"no-negated-in-lhs",["259"],["258"],["259"],["258"],["259"],"no-dupe-keys","Duplicate key 'baseURL'.","ObjectExpression","unexpected","no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["260"],"'useGlobalState' is defined but never used.","React Hook useEffect has missing dependencies: 'plantRecordId' and 'shedId'. Either include them or remove the dependency array.",["261"],"'dispatch' is assigned a value but never used.","'sheds' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'shedId'. Either include it or remove the dependency array.",["262"],"'Link' is defined but never used.","'axios' is defined but never used.",["263"],["264"],["265"],"React Hook useEffect has missing dependencies: 'filesToUpload' and 'readAndPreview'. Either include them or remove the dependency array.",["266"],["258"],["259"],["267"],"'useState' is defined but never used.",["268"],["269"],"'history' is assigned a value but never used.",["270"],["271"],["272"],"no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"277","fix":"279"},{"desc":"273","fix":"280"},{"desc":"275","fix":"281"},{"desc":"282","fix":"283"},{"desc":"273","fix":"284"},{"desc":"277","fix":"285"},{"desc":"277","fix":"286"},{"desc":"275","fix":"287"},{"desc":"275","fix":"288"},{"desc":"273","fix":"289"},"Update the dependencies array to be: [dispatch]",{"range":"290","text":"291"},"Update the dependencies array to be: [plantRecordId, shedId]",{"range":"292","text":"293"},"Update the dependencies array to be: [shedId]",{"range":"294","text":"295"},{"range":"296","text":"295"},{"range":"297","text":"291"},{"range":"298","text":"293"},"Update the dependencies array to be: [filePaths, filesToUpload, readAndPreview]",{"range":"299","text":"300"},{"range":"301","text":"291"},{"range":"302","text":"295"},{"range":"303","text":"295"},{"range":"304","text":"293"},{"range":"305","text":"293"},{"range":"306","text":"291"},[1012,1014],"[dispatch]",[723,725],"[plantRecordId, shedId]",[721,723],"[shedId]",[845,847],[489,491],[1252,1254],[1455,1466],"[filePaths, filesToUpload, readAndPreview]",[1468,1470],[721,723],[845,847],[1149,1151],[723,725],[489,491]]