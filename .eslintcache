[{"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/index.js":"1","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/globalState.js":"2","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/App.js":"3","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/stateReducer.js":"4","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/api.js":"5","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/About.js":"6","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SearchPlant.js":"7","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/types.js":"8","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SelectedPlantFirstEntry.js":"9","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Navbar.js":"10","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/LandingPage.js":"11","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantRecord.js":"12","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantThumbnails.js":"13","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewRecord.js":"14","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/GardenSheds.js":"15","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewLog.js":"16","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/HamburgerMenu.js":"17","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SignIn.js":"18","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/utilities/date.js":"19"},{"size":244,"mtime":1607856370897,"results":"20","hashOfConfig":"21"},{"size":463,"mtime":1607856370890,"results":"22","hashOfConfig":"21"},{"size":2405,"mtime":1609987374783,"results":"23","hashOfConfig":"21"},{"size":1124,"mtime":1609987374824,"results":"24","hashOfConfig":"21"},{"size":189,"mtime":1608507352431,"results":"25","hashOfConfig":"21"},{"size":133,"mtime":1607079788489,"results":"26","hashOfConfig":"21"},{"size":140,"mtime":1607079788503,"results":"27","hashOfConfig":"21"},{"size":249,"mtime":1609987374826,"results":"28","hashOfConfig":"21"},{"size":178,"mtime":1607079788509,"results":"29","hashOfConfig":"21"},{"size":904,"mtime":1609987374800,"results":"30","hashOfConfig":"21"},{"size":588,"mtime":1609987374798,"results":"31","hashOfConfig":"21"},{"size":3709,"mtime":1609987374806,"results":"32","hashOfConfig":"21"},{"size":1656,"mtime":1609987374816,"results":"33","hashOfConfig":"21"},{"size":4305,"mtime":1609987374789,"results":"34","hashOfConfig":"21"},{"size":1603,"mtime":1609987374792,"results":"35","hashOfConfig":"21"},{"size":3991,"mtime":1609987374785,"results":"36","hashOfConfig":"21"},{"size":2197,"mtime":1609987374795,"results":"37","hashOfConfig":"21"},{"size":2974,"mtime":1609987374822,"results":"38","hashOfConfig":"21"},{"size":330,"mtime":1609987374831,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ktzwsg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/index.js",[],["87","88"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/globalState.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/App.js",["89"],"import React, { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Navbar from './components/Navbar';\nimport LandingPage from './components/LandingPage';\nimport About from './components/About';\nimport PlantRecord from './components/PlantRecord';\nimport SelectedPlantFirstEntry from './components/SelectedPlantFirstEntry';\nimport GardenSheds from './components/GardenSheds';\nimport PlantThumbnails from './components/PlantThumbnails';\nimport CreateNewRecord from './components/CreateNewRecord';\nimport SearchPlant from './components/SearchPlant';\nimport CreateNewLog from './components/CreateNewLog';\nimport api from './config/api';\nimport { useGlobalState } from './config/globalState';\nimport { SET_USER, AUTH_SIGN_IN } from './config/types';\n\n\nconst App = () => {\n  const { dispatch } = useGlobalState();\n\n  useEffect(() => {\n    console.log('app started');\n    const acquireUser = async () => {\n      try {\n        const resAcquiredUser = await api.get('/api/auth/userinfo');\n        const acquiredUser = resAcquiredUser.data;\n        console.log('acquiredUser:', acquiredUser);\n        if (acquiredUser) {\n          dispatch({\n            type: SET_USER,\n            payload: acquiredUser\n          })\n          dispatch({ type: AUTH_SIGN_IN });\n        } else {\n          console.log('not logged in');\n        }\n      } catch (err) {\n        console.log('err: ', err.message);\n      }\n    }\n    acquireUser();\n  }, []);\n  return (\n    <div id=\"app-container\">\n      <BrowserRouter>\n        <Navbar />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/sheds/:shedId/records/new\" component={CreateNewRecord} />\n            <Route path=\"/sheds/:shedId/records/:plantRecordId/logs/new\" component={CreateNewLog} />\n            <Route path=\"/sheds/:shedId/records/:plantRecordId/first-entry\" component={SelectedPlantFirstEntry} />\n            <Route path=\"/sheds/:shedId/records/:plantRecordId\" component={PlantRecord} />\n            <Route path=\"/sheds/:shedId\" component={PlantThumbnails} />\n            <Route path=\"/sheds\" component={GardenSheds} />\n            <Route path=\"/search\" component={SearchPlant} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/stateReducer.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/api.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/About.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SearchPlant.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/types.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SelectedPlantFirstEntry.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Navbar.js",["90"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useGlobalState } from '../config/globalState';\nimport { SET_IS_MENU_ON } from '../config/types';\nimport HamburgerMenu from './HamburgerMenu';\n\n\nconst Navbar = () => {\n  const { state, dispatch } = useGlobalState();\n  const { isLoggedIn, isMenuOn } = state;\n\n  const handleClickMenuIcon = () => {\n    dispatch({\n      type: SET_IS_MENU_ON,\n      payload: !isMenuOn\n    })\n  }\n\n  return (\n    <>\n      <div className=\"navbar-wrapper\">\n        <div className=\"navbar container\">\n          <div>\n            <Link to={isLoggedIn ? \"/sheds\" : \"/\"}>Online Garden Shed</Link>\n          </div>\n          <div className=\"mobile-menu-icon\" onClick={handleClickMenuIcon}>\n            <i className=\"fa fa-bars\"></i>\n          </div>\n          </div>\n      </div>\n      <HamburgerMenu/>\n    </>\n  );\n}\n\nexport default Navbar;\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/LandingPage.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantRecord.js",["91","92"],"import React, { useState, useEffect } from 'react'\nimport { useParams, Link, useHistory } from 'react-router-dom';\nimport { useGlobalState } from '../config/globalState';\nimport api from '../config/api';\n\nconst PlantRecord = () => {\n  const [plantRecord, setPlantRecord] = useState(null);\n  const { shedId, plantRecordId } = useParams();\n  let history = useHistory();\n\n  useEffect(() => {\n    const findPlantRecord = async () => {\n      const res = await api(`/api/sheds/${shedId}/records/${plantRecordId}`);\n      const foundPlantRecord = res.data;\n      console.log('found Plant record:', foundPlantRecord);\n      if(foundPlantRecord) {\n        setPlantRecord(foundPlantRecord);\n      }\n    }\n    findPlantRecord();\n  }, []);\n\n  const handleClickNewLog = () => {\n    history.push(`/sheds/${shedId}/records/${plantRecordId}/logs/new`);\n  }\n  return (\n    <div>\n      {\n        plantRecord &&\n          <>\n            <p className=\"path\">\n              <Link to={`/sheds/${shedId}`}> {`${plantRecord.ownedShed.owner.email}`}</Link>\n              {` > ${plantRecord.commonName}`}\n            </p>\n            <div className=\"icon icon-record icon-record-follow\">\n              <i className=\"fas fa-leaf\"></i>\n            </div>\n\n            <div className=\"button-wrapper\">\n              <button className=\"about\" type=\"button\">About</button>\n            </div>\n            <div className=\"button-wrapper\">\n              <button onClick={handleClickNewLog} className=\"new-log\" type=\"button\">Creat a new log</button>\n            </div>\n\n            <div id=\"plant-record-container\">\n              <div id=\"image-wrapper\">\n                <img className=\"main-image\" src=\"http://placekitten.com/400/300\"  alt=\"\"/>\n              </div>\n\n              <div className=\"thumbnail-1\">\n                <img className=\"thumbnail\" src=\"http://placekitten.com/70/50\" alt=\"\"/>\n              </div>\n              <div className=\"thumbnail-2\">\n                <img className=\"thumbnail\" src=\"http://placekitten.com/70/50\" alt=\"\"/>\n              </div>\n              <div className=\"thumbnail-3\">\n                <img className=\"thumbnail\" src=\"http://placekitten.com/70/50\" alt=\"\"/>\n              </div>\n              <div className=\"thumbnail-4\">\n                <img className=\"thumbnail\" src=\"http://placekitten.com/70/50\" alt=\"\"/>\n              </div>\n              <div className=\"thumbnail-5\">\n                <img className=\"thumbnail\" src=\"http://placekitten.com/70/50\" alt=\"\"/>\n              </div>\n\n            </div>\n\n            <div className=\"icon icon-record icon-record-delete\">\n              <i className=\"far fa-trash-alt\"></i>\n            </div>\n            <div className=\"icon icon-record icon-record-edit\">\n              <i className=\"far fa-edit\"></i>\n            </div>\n\n            <p className=\"sub-headings\"><strong>Date:</strong> 17/11/2020 (Day 1)</p>\n            <p className=\"sub-headings\"><strong>My Notes:</strong></p>\n            <p className=\"my-notes\">\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec semper vitae magna eget mattis.\n              Vivamus posuere iaculis consequat. Pellentesque euismod elementum bibendum.\n              Quisque tincidunt nisi a ligula sagittis accumsan. Fusce sed luctus elit.\n              Aenean at ipsum iaculis, facilisis lectus et, interdum nisi. Pellentesque quis fermentum ante.\n              In id massa eu nisi dignissim elementum in vitae quam. Duis eros ante, pulvinar ut est et, maximus consequat augue.\n              Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed vitae tellus lacus.\n            </p>\n          </>\n      }\n    </div>\n  )\n}\n\nexport default PlantRecord\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantThumbnails.js",["93","94","95"],"import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useGlobalState } from '../config/globalState';\nimport api from '../config/api';\n\n\nconst PlantThumbnails = () => {\n  const { state, dispatch } = useGlobalState();\n  const { sheds } = state;\n  const [shed, setShed] = useState(null);\n  const { shedId } = useParams();\n  useEffect(() => {\n    // const foundShed = sheds.find(element => element._id === shedId);\n    const findShed = async () => {\n      const res = await api(`/api/sheds/${shedId}`);\n      const foundShed = res.data;\n      console.log('foundShed:', foundShed);\n      if(foundShed) {\n        setShed(foundShed);\n      }\n    }\n    findShed();\n  }, []);\n  console.log('shed:', shed);\n  return (\n    <div>\n      <button type=\"button\" onClick={async () => {\n        const res = await api.get(`/api/sheds/${shedId}/toggle-follow`);\n        console.log('res.data:', res.data);\n      }}>follow</button>\n      {\n        shed &&\n          <>\n            <p className=\"path\">{shed.owner.email}</p>\n            <div id=\"plant-thumbnails-container\">\n              {shed.plantRecords.map(plantRecord => (\n                <Link to={`/sheds/${shedId}/records/${plantRecord._id}`} key={plantRecord._id}>\n                  <div className=\"plant-thumbnail-wrapper\">\n                    <img className=\"plant-thumbnail\" src={plantRecord.recordPhoto} alt=\"\"/>\n                    <p className=\"plant-thumbnail-name\">{plantRecord.commonName}</p>\n                  </div>\n                </Link>\n              ))}\n            </div>\n          </>\n      }\n    </div>\n  )\n}\n\nexport default PlantThumbnails\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewRecord.js",["96","97","98"],"import React, { useState, useEffect } from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport api from '../config/api';\nimport axios from 'axios';\nimport { getCurrentDate } from '../utilities/date';\n\nconst CreateNewRecord = () => {\n  const [shed, setShed] = useState(null);\n  const [searchText, setSearchText] = useState('');\n  const [plants, setPlants] = useState(null);\n  const { shedId } = useParams();\n  const [plantIndex, setPlantIndex] = useState(null);\n  const [description, setDescription] = useState('');\n  let history = useHistory();\n\n  useEffect(() => {\n    const findShed = async () => {\n      const res = await api(`/api/sheds/${shedId}`);\n      const foundShed = res.data;\n      console.log('foundShed:', foundShed);\n      if(foundShed) {\n        setShed(foundShed);\n      }\n    }\n    findShed();\n  }, []);\n\n  const handleSearch = async (event) => {\n    event.preventDefault();\n    const res = await api.get(`api/plants?q=${searchText}`);\n    console.log(res);\n    setPlants(res.data);\n  }\n\n  const handleChangeSearch = (event) => {\n    setSearchText(event.target.value);\n  }\n\n  const handleClick = (event, index) => {\n    console.log(index);\n    setPlantIndex(index);\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const res = await api.post(`api/sheds/${shedId}/records`,\n      {\n        commonName: plants[plantIndex].common_name,\n        scientificName: plants[plantIndex].scientific_name,\n        familyCommonName: plants[plantIndex].family_common_name,\n        recordPhoto: plants[plantIndex].image_url,\n        description\n      });\n      console.log(res.data);\n      history.push(`/sheds/${shedId}/records/${res.data._id}`);\n  }\n\n  const handleChangeDescription = (event) => {\n    setDescription(event.target.value);\n  }\n  return (\n    <div>\n      {\n        shed &&\n          <>\n            <p className=\"path\">{shed.owner.email}</p>\n            <h1 className=\"title\">Create New Record</h1>\n            <p className=\"current-date\">{`Date: ${getCurrentDate()}`}</p>\n            {\n              plantIndex === null ?\n                <>\n                  <form onSubmit={handleSearch}>\n                    <div className=\"input-content-wrapper\">\n                      <input className=\"input-content\" placeholder=\"Search keywords\" autoFocus type=\"text\" value={searchText} onChange={handleChangeSearch}/>\n                      <button className=\"input-button\" type=\"submit\">Search</button>\n                    </div>\n                  </form>\n                  {\n                    plants &&\n                    <>\n                      <h2>{`Searched results for \"${searchText}\"`} </h2>\n                      {\n                        plants.map((plant, index) => (\n                          <div className=\"api-wrapper\" key={plant.id} onClick={(event) => handleClick(event, index)}>\n                            <img className=\"api-image\" src={plant.image_url} alt=\"\"/>\n                            <p><strong>Common name:</strong>&nbsp;{plant.common_name}</p>\n                            <p><strong>Scientific name:</strong>&nbsp;{plant.scientific_name}</p>\n                            <p><strong>Family common name:</strong>&nbsp;{plant.family_common_name}</p>\n                          </div>  \n                        ))\n                      }\n                    </>\n                  }\n                </>\n              :\n                <div className=\"api-wrapper\" key={plants[plantIndex].id}>\n                  <img className=\"api-image\" src={plants[plantIndex].image_url} alt=\"\"/>\n                  <p><strong>Common name:</strong>&nbsp;{plants[plantIndex].common_name}</p>\n                  <p><strong>Scientific name:</strong>&nbsp;{plants[plantIndex].scientific_name}</p>\n                  <p><strong>Family common name:</strong>&nbsp;{plants[plantIndex].family_common_name}</p>\n                  <form onSubmit={handleSubmit}>\n                    <textarea id=\"description-input\" name=\"description\" rows=\"10\" placeholder=\"Description\" value={description} onChange={handleChangeDescription}/>\n                    <button type=\"submit\">Create a new record</button>\n                  </form>\n                </div>\n            }\n            \n          </>\n      }\n    </div>\n  )\n}\n\nexport default CreateNewRecord\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/GardenSheds.js",["99"],"import React, { useEffect } from 'react';\nimport api from '../config/api';\nimport { useGlobalState } from '../config/globalState';\nimport { SET_SHEDS } from '../config/types';\nimport { Link } from 'react-router-dom'\n\n\nconst GardenSheds = () => {\n  const { state, dispatch } = useGlobalState();\n  const { sheds } = state;\n\n  useEffect(() => {\n    api.get('/api/sheds')\n      .then(res => {\n        dispatch({\n          type: SET_SHEDS,\n          payload: res.data\n        })\n      });\n  }, []);\n\n  console.log('sheds: ',sheds)\n\n  return (\n    <div>\n      <div id=\"garden-sheds-container\">\n        {\n          sheds.length > 0 &&\n          sheds.map(shed => (\n            <div key={shed._id}>\n              {\n                shed.plantRecords.length > 0 && (\n                  <Link to={ `/sheds/${shed._id}` }>\n                    <div className=\"garden-shed-wrapper\">\n                      <div className=\"garden-shed-image-wrapper\">\n                        <img className=\"garden-shed-image\" src={shed.plantRecords[0].recordPhoto} alt=\"\"/>\n                      </div>\n                      <p>{shed.owner.email}</p>\n                      {\n                        shed.plantRecords.length > 0 && (\n                          <p>\n                            {shed.plantRecords.map(plantRecord => plantRecord.commonName).join(', ')}\n                          </p>\n                        )\n                      }\n                    </div>\n                  </Link>\n                )\n              }\n            </div>\n          ))\n        }\n\n      </div>\n    </div>\n  );\n}\n\nexport default GardenSheds;\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewLog.js",["100","101"],"import React, { useState, useEffect } from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport api from '../config/api';\nimport { getCurrentDate } from '../utilities/date';\n\nconst CreateNewLog = () => {\n  const { shedId, plantRecordId } = useParams();\n  const [plantRecord, setPlantRecord] = useState(null);\n  const [formData, setFormData] = useState({});\n  const [temp, setTemp] = useState(null);\n  let history = useHistory();\n\n  useEffect(() => {\n    const findPlantRecord = async () => {\n      const res = await api(`/api/sheds/${shedId}/records/${plantRecordId}`);\n      const foundPlantRecord = res.data;\n      console.log('found Plant record:', foundPlantRecord);\n      if(foundPlantRecord) {\n        setPlantRecord(foundPlantRecord);\n        console.log(new Date(foundPlantRecord.createdAt));\n      }\n    }\n    findPlantRecord();\n  }, []);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // const res = await api.post(`api/sheds/${shedId}/records/${plantRecordId}`,\n      // {\n      //   commonName: plants[plantIndex].common_name,\n      //   scientificName: plants[plantIndex].scientific_name,\n      //   familyCommonName: plants[plantIndex].family_common_name,\n      //   recordPhoto: plants[plantIndex].image_url,\n      //   description\n      // });\n      // console.log(res.data);\n      // history.push(`/sheds/${shedId}/records/${res.data._id}`);\n  };\n\n  const handleChangeNotes = event => {\n    setFormData(\n      {...formData,\n        note: event.target.value\n      }\n    );\n  };\n\n  const handleChangeFiles = event => {\n    console.log(event.target.files);\n    console.log(event.target.value);\n    if(event.target.files.length > 0) {\n      setTemp(event.target.files[0].name);\n    }\n  };\n\n  const { notes } = formData;\n\n  return (\n    <div>\n      {\n        plantRecord &&\n          <>\n            <p className=\"path\">\n              <Link to={`/sheds/${shedId}`}> {`${plantRecord.ownedShed.owner.email}`}</Link>{` > ${plantRecord.commonName}`}\n            </p>\n          </>\n      }\n      <h1 className=\"title\">Create New Log</h1>\n      <p className=\"current-date\">{`Date: ${getCurrentDate()}`}</p>\n      <form onSubmit={handleSubmit}>\n        <textarea id=\"description-input\" name=\"description\" rows=\"5\" placeholder=\"Notes\" value={notes} onChange={handleChangeNotes}/>\n        <input multiple onChange={handleChangeFiles} type=\"file\" name=\"image-upload\"/>\n        \n        <p id=\"select-main-image\">Select Main Image</p>\n        <div className=\"radio-wrapper\">\n          <input type=\"radio\" className=\"thumbnail-radio-button\" name=\"thumbnail-radio-button\"/>\n          {/* <input type=\"radio\" className=\"thumbnail-radio-button\" name=\"thumbnail-radio-button\"/>\n          <input type=\"radio\" className=\"thumbnail-radio-button\" name=\"thumbnail-radio-button\"/>\n          <input type=\"radio\" className=\"thumbnail-radio-button\" name=\"thumbnail-radio-button\"/> */}\n          {/* <input type=\"radio\" className=\"thumbnail-radio-button\" name=\"thumbnail-radio-button\"/> */}\n        </div>\n        <div className=\"thumbnails-wrapper\">\n          <img className=\"log-thumbnail\" src=\"http://placekitten.com/640/480\" alt=\"first thumbnail\"/>\n          {/* <img className=\"log-thumbnail\" src=\"http://placekitten.com/480/640\" alt=\"second thumbnail\"/>\n          <img className=\"log-thumbnail\" src=\"http://placekitten.com/1280/960\" alt=\"third thumbnail\"/>\n          <img className=\"log-thumbnail\" src=\"http://placekitten.com/960/1280\" alt=\"fourth thumbnail\"/> */}\n          {/* <img className=\"log-thumbnail\" src=\"http://placekitten.com/2568/1580\" alt=\"fifth thumbnail\"/> */}\n        </div>\n        {\n          temp && <img className=\"log-selected-thumbnail\" src={temp} alt=\"seleted thumbnail main plant\"/>\n        }\n        <img className=\"log-selected-thumbnail\" src=\"http://placekitten.com/1280/960\" alt=\"seleted thumbnail main plant\"/>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateNewLog\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/HamburgerMenu.js",["102"],"import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport api from '../config/api';\nimport { useGlobalState } from '../config/globalState';\nimport { AUTH_SIGN_OUT, SET_IS_MENU_ON, SET_USER } from '../config/types';\nimport SignIn from './SignIn';\n\nconst HamburgerMenu = () => {\n  const { state, dispatch } = useGlobalState();\n  const { currentUser, isMenuOn } = state;\n  let history = useHistory();\n\n  const handleClickRedirect = (event) => {\n    console.log('event.target.dataset:', event.target.dataset.path);\n    console.log('currentUser:', currentUser);\n    const { path } = event.target.dataset;\n    if (path) {\n      dispatch({\n        type: SET_IS_MENU_ON,\n        payload: false\n      });\n      history.push(path);\n    }\n  };\n\n  const handleClickSignOut = async () => {\n    try {\n      dispatch({\n        type: SET_IS_MENU_ON,\n        payload: false\n      });\n      await api.get('/api/auth/signout');\n      dispatch({\n        type: SET_USER,\n        payload: null\n      });\n      dispatch({ type: AUTH_SIGN_OUT });\n      history.push('/');\n    } catch (err) {\n      console.log('err: ', err.message);\n    }\n  }\n\n  return (\n    <>\n      {\n        isMenuOn &&\n        <div id=\"mobile-menu-list\">\n          {\n            currentUser ?\n              <>\n                <div className=\"mobile-menu-profile\">\n                  <img src={currentUser.photo} alt=\"current user\" className=\"profile-image\"/>\n                  <h4>{currentUser.displayName}</h4>\n                </div>\n\n                <p>My Garden Shed</p>\n                <p onClick={handleClickRedirect} data-path={`/sheds/${currentUser.shed}/records/new`}>Create a new record</p>\n                <hr />\n                <p>Following - Garden Sheds</p>\n                <p>Following - Plants</p>\n                <hr />\n                <p>Mission Statement</p>\n                <hr />\n                <p onClick={handleClickSignOut}>Sign out</p>\n              </>\n              :\n              <>\n                <SignIn tagType=\"paragraph\"/>\n                <hr />\n                <p>Mission Statement</p>\n              </>\n          }\n        </div>\n      }\n    </>\n  );\n};\n\nexport default HamburgerMenu;\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SignIn.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/utilities/date.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":43,"column":6,"nodeType":"109","endLine":43,"endColumn":8,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"115","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":24},{"ruleId":"107","severity":1,"message":"116","line":21,"column":6,"nodeType":"109","endLine":21,"endColumn":8,"suggestions":"117"},{"ruleId":"111","severity":1,"message":"118","line":8,"column":18,"nodeType":"113","messageId":"114","endLine":8,"endColumn":26},{"ruleId":"111","severity":1,"message":"119","line":9,"column":11,"nodeType":"113","messageId":"114","endLine":9,"endColumn":16},{"ruleId":"107","severity":1,"message":"120","line":23,"column":6,"nodeType":"109","endLine":23,"endColumn":8,"suggestions":"121"},{"ruleId":"111","severity":1,"message":"122","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":14},{"ruleId":"111","severity":1,"message":"123","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":13},{"ruleId":"107","severity":1,"message":"120","line":26,"column":6,"nodeType":"109","endLine":26,"endColumn":8,"suggestions":"124"},{"ruleId":"107","severity":1,"message":"108","line":20,"column":6,"nodeType":"109","endLine":20,"endColumn":8,"suggestions":"125"},{"ruleId":"111","severity":1,"message":"126","line":11,"column":7,"nodeType":"113","messageId":"114","endLine":11,"endColumn":14},{"ruleId":"107","severity":1,"message":"116","line":24,"column":6,"nodeType":"109","endLine":24,"endColumn":8,"suggestions":"127"},{"ruleId":"111","severity":1,"message":"122","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":14},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["130"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useGlobalState' is defined but never used.","React Hook useEffect has missing dependencies: 'plantRecordId' and 'shedId'. Either include them or remove the dependency array.",["131"],"'dispatch' is assigned a value but never used.","'sheds' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'shedId'. Either include it or remove the dependency array.",["132"],"'Link' is defined but never used.","'axios' is defined but never used.",["133"],["134"],"'history' is assigned a value but never used.",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"140","fix":"142"},{"desc":"136","fix":"143"},{"desc":"138","fix":"144"},"Update the dependencies array to be: [dispatch]",{"range":"145","text":"146"},"Update the dependencies array to be: [plantRecordId, shedId]",{"range":"147","text":"148"},"Update the dependencies array to be: [shedId]",{"range":"149","text":"150"},{"range":"151","text":"150"},{"range":"152","text":"146"},{"range":"153","text":"148"},[1468,1470],"[dispatch]",[723,725],"[plantRecordId, shedId]",[721,723],"[shedId]",[845,847],[489,491],[870,872]]