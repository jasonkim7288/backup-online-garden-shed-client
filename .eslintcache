[{"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/index.js":"1","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/globalState.js":"2","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/App.js":"3","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/stateReducer.js":"4","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/api.js":"5","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/types.js":"6","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/About.js":"7","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SelectedPlantFirstEntry.js":"8","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SearchPlant.js":"9","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewLog.js":"10","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Navbar.js":"11","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/LandingPage.js":"12","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantRecord.js":"13","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/GardenSheds.js":"14","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewRecord.js":"15","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantThumbnails.js":"16","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SignIn.js":"17"},{"size":244,"mtime":1607856370897,"results":"18","hashOfConfig":"19"},{"size":463,"mtime":1607856370890,"results":"20","hashOfConfig":"19"},{"size":2315,"mtime":1608553183803,"results":"21","hashOfConfig":"19"},{"size":951,"mtime":1608553183820,"results":"22","hashOfConfig":"19"},{"size":189,"mtime":1608507352431,"results":"23","hashOfConfig":"19"},{"size":201,"mtime":1607987246113,"results":"24","hashOfConfig":"19"},{"size":133,"mtime":1607079788489,"results":"25","hashOfConfig":"19"},{"size":178,"mtime":1607079788509,"results":"26","hashOfConfig":"19"},{"size":140,"mtime":1607079788503,"results":"27","hashOfConfig":"19"},{"size":144,"mtime":1607079788492,"results":"28","hashOfConfig":"19"},{"size":462,"mtime":1608693918261,"results":"29","hashOfConfig":"19"},{"size":572,"mtime":1608507352418,"results":"30","hashOfConfig":"19"},{"size":3540,"mtime":1608507352422,"results":"31","hashOfConfig":"19"},{"size":1377,"mtime":1608507352415,"results":"32","hashOfConfig":"19"},{"size":2991,"mtime":1608610381108,"results":"33","hashOfConfig":"19"},{"size":2175,"mtime":1608507352424,"results":"34","hashOfConfig":"19"},{"size":2374,"mtime":1608507352428,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1ktzwsg",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/index.js",[],["76","77"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/globalState.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/App.js",["78"],"import React, { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Navbar from './components/Navbar';\nimport LandingPage from './components/LandingPage';\nimport About from './components/About';\nimport PlantRecord from './components/PlantRecord';\nimport SelectedPlantFirstEntry from './components/SelectedPlantFirstEntry';\nimport GardenSheds from './components/GardenSheds';\nimport PlantThumbnails from './components/PlantThumbnails';\nimport CreateNewRecord from './components/CreateNewRecord';\nimport SearchPlant from './components/SearchPlant';\nimport CreateNewLog from './components/CreateNewLog';\nimport api from './config/api';\nimport { useGlobalState } from './config/globalState';\nimport { SET_USER, AUTH_SIGN_IN } from './config/types';\n\n\nconst App = () => {\n  const { dispatch } = useGlobalState();\n\n  useEffect(() => {\n    console.log('app started');\n    const acquireUser = async () => {\n      try {\n        const resAcquiredUser = await api.get('/api/auth/userinfo');\n        const acquiredUser = resAcquiredUser.data;\n        console.log('acquiredUser:', acquiredUser);\n        if (acquiredUser) {\n          dispatch({\n            type: SET_USER,\n            payload: acquiredUser\n          })\n          dispatch({ type: AUTH_SIGN_IN });\n        }\n      } catch (err) {\n        console.log('err: ', err.message);\n      }\n    }\n    acquireUser();\n  }, []);\n  return (\n    <div id=\"app-container\">\n      <BrowserRouter>\n        <Navbar />\n        <div className=\"body container\">\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/sheds/:shedId/records/new\" component={CreateNewRecord} />\n            <Route path=\"/sheds/:shedId/records/:plantRecordId/first-entry\" component={SelectedPlantFirstEntry} />\n            <Route path=\"/sheds/:shedId/records/:plantRecordId\" component={PlantRecord} />\n            <Route path=\"/sheds/:shedId\" component={PlantThumbnails} />\n            <Route path=\"/sheds\" component={GardenSheds} />\n            <Route path=\"/search\" component={SearchPlant} />\n            <Route path=\"/new-log\" component={CreateNewLog} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/stateReducer.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/api.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/config/types.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/About.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SelectedPlantFirstEntry.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SearchPlant.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewLog.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/Navbar.js",["79"],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/LandingPage.js",[],"/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantRecord.js",["80","81"],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { useGlobalState } from '../config/globalState';\nimport api from '../config/api';\nimport { Link } from 'react-router-dom';\n\nconst PlantRecord = () => {\n  const [plantRecord, setPlantRecord] = useState(null);\n  const { shedId, plantRecordId } = useParams();\n\n  useEffect(() => {\n    const findPlantRecord = async () => {\n      const res = await api(`/api/sheds/${shedId}/records/${plantRecordId}`);\n      const foundPlantRecord = res.data;\n      console.log('found Plant record:', foundPlantRecord);\n      if(foundPlantRecord) {\n        setPlantRecord(foundPlantRecord);\n      }\n    }\n    findPlantRecord();\n  }, []);\n  return (\n    <div>\n      {\n        plantRecord &&\n          <>\n            <p className=\"path\">\n              <Link to={`/sheds/${shedId}`}> {`${plantRecord.ownedShed.owner.email}`}</Link>\n              {` > ${plantRecord.commonName}`}\n            </p>\n            <div className=\"icon icon-record icon-record-follow\">\n              <i className=\"fas fa-leaf\"></i>\n            </div>\n\n            <div className=\"button-wrapper\">\n              <button className=\"about\" type=\"button\">About</button>\n            </div>\n            <div className=\"button-wrapper\">\n              <button className=\"new-log\" type=\"button\">Creat a new log</button>\n            </div>\n\n            <div id=\"plant-record-container\">\n              <div id=\"image-wrapper\">\n                <img className=\"main-image\" src=\"http://placekitten.com/400/400\"  alt=\"\"/>\n              </div>\n\n              <div className=\"thumbnail-1\">\n                <img className=\"thumbnail\" src=\"http://placekitten.com/70/50\" alt=\"\"/>\n              </div>\n              <div className=\"thumbnail-2\">\n                <img className=\"thumbnail\" src=\"http://placekitten.com/70/50\" alt=\"\"/>\n              </div>\n              <div className=\"thumbnail-3\">\n                <img className=\"thumbnail\" src=\"http://placekitten.com/70/50\" alt=\"\"/>\n              </div>\n              <div className=\"thumbnail-4\">\n                <img className=\"thumbnail\" src=\"http://placekitten.com/70/50\" alt=\"\"/>\n              </div>\n              <div className=\"thumbnail-5\">\n                <img className=\"thumbnail\" src=\"http://placekitten.com/70/50\" alt=\"\"/>\n              </div>\n\n            </div>\n\n            <div className=\"icon icon-record icon-record-delete\">\n              <i className=\"far fa-trash-alt\"></i>\n            </div>\n            <div className=\"icon icon-record icon-record-edit\">\n              <i className=\"far fa-edit\"></i>\n            </div>\n\n            <p className=\"sub-headings\"><strong>Date:</strong> 17/11/2020 (Day 1)</p>\n            <p className=\"sub-headings\"><strong>My Notes:</strong></p>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec semper vitae magna eget mattis.\n              Vivamus posuere iaculis consequat. Pellentesque euismod elementum bibendum.\n              Quisque tincidunt nisi a ligula sagittis accumsan. Fusce sed luctus elit.\n              Aenean at ipsum iaculis, facilisis lectus et, interdum nisi. Pellentesque quis fermentum ante.\n              In id massa eu nisi dignissim elementum in vitae quam. Duis eros ante, pulvinar ut est et, maximus consequat augue.\n              Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed vitae tellus lacus.\n            </p>\n          </>\n      }\n    </div>\n  )\n}\n\nexport default PlantRecord\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/GardenSheds.js",["82"],"import React, { useEffect } from 'react';\nimport api from '../config/api';\nimport { useGlobalState } from '../config/globalState';\nimport { SET_SHEDS } from '../config/types';\nimport { Link } from 'react-router-dom'\n\n\nconst GardenSheds = () => {\n  const { state, dispatch } = useGlobalState();\n  const { sheds } = state;\n\n  useEffect(() => {\n    api.get('/api/sheds')\n      .then(res => {\n        dispatch({\n          type: SET_SHEDS,\n          payload: res.data\n        })\n      });\n  }, []);\n\n  console.log('sheds: ',sheds)\n\n  return (\n    <div>\n      <h1>Garden Sheds</h1>\n      <div id=\"garden-sheds-container\">\n        {\n          sheds.length > 0 &&\n          sheds.map(shed => (\n            <div key={shed._id}>\n              {\n                shed.plantRecords.length > 0 && (\n                  <Link to={ `/sheds/${shed._id}` }>\n                    <img className=\"garden-shed\" src={shed.plantRecords[0].recordPhoto} alt=\"\"/>\n                  </Link>\n                )\n              }\n              <p>{shed.owner.email}</p>\n              {\n                shed.plantRecords.length > 0 && (\n                  <p>\n                    {shed.plantRecords.map(plantRecord => plantRecord.commonName).join(', ')}\n                  </p>\n                )\n              }\n            </div>\n          ))\n        }\n      </div>\n    </div> \n  );\n}\n\nexport default GardenSheds;\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/CreateNewRecord.js",["83","84","85"],"import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport api from '../config/api';\nimport axios from 'axios';\n\nconst CreateNewRecord = () => {\n  const [shed, setShed] = useState(null);\n  const [searchText, setSearchText] = useState('');\n  const [plants, setPlants] = useState(null);\n  const { shedId } = useParams();\n  const [plantIndex, setPlantIndex] = useState(null);\n  useEffect(() => {\n    const findShed = async () => {\n      const res = await api(`/api/sheds/${shedId}`);\n      const foundShed = res.data;\n      console.log('foundShed:', foundShed);\n      if(foundShed) {\n        setShed(foundShed);\n      }\n    }\n    findShed();\n  }, []);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const res = await api.get(`api/plants?q=${searchText}`);\n    console.log(res);\n    setPlants(res.data);\n  }\n\n  const handleChange = (event) => {\n    setSearchText(event.target.value);\n  }\n\n  const handleClick = (event, index) => {\n    console.log(index);\n    setPlantIndex(index);\n  } \n  return (\n    <div>\n      {\n        shed &&\n          <>\n            <p className=\"path\">{shed.owner.email}</p>\n            <h1>Create New Record</h1>\n            <p>Date: 21/12/2020</p>\n            {\n              plantIndex ?\n                <div className=\"api-wrapper\" key={plants[plantIndex].id}>\n                  <img className=\"api-image\" src={plants[plantIndex].image_url} alt=\"\"/>\n                  <p><strong>Common name:</strong>{plants[plantIndex].common_name}</p>\n                  <p><strong>Scientific name:</strong>{plants[plantIndex].scientific_name}</p>\n                  <p><strong>Family common name:</strong>{plants[plantIndex].family_common_name}</p>\n                </div>\n              :\n                <>\n                  <form onSubmit={handleSubmit}>\n                    <input autoFocus type=\"text\" value={searchText} onChange={handleChange}/>\n                    <button type=\"submit\">Search</button>\n                  </form>\n                  {\n                    plants &&\n                    <>\n                      <h2>{`Searched results for \"${searchText}\"`} </h2>\n                      {\n                        plants.map((plant, index) => (\n                          <div className=\"api-wrapper\" key={plant.id} onClick={(event) => handleClick(event, index)}>\n                            <img className=\"api-image\" src={plant.image_url} alt=\"\"/>\n                            <p><strong>Common name:</strong>&nbsp;{plant.common_name}</p>\n                            <p><strong>Scientific name:</strong>&nbsp;{plant.scientific_name}</p>\n                            <p><strong>Family common name:</strong>&nbsp;{plant.family_common_name}</p>\n                          </div>  \n                        ))\n                      }\n                    </>\n                  }\n                </>\n            }\n            \n          </>\n      }\n    </div>\n  )\n}\n\nexport default CreateNewRecord\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/PlantThumbnails.js",["86","87","88"],"import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useGlobalState } from '../config/globalState';\nimport api from '../config/api';\n\n\nconst PlantThumbnails = () => {\n  const { state, dispatch } = useGlobalState();\n  const { sheds } = state;\n  const [shed, setShed] = useState(null); \n  const { shedId } = useParams();\n  useEffect(() => {\n    // const foundShed = sheds.find(element => element._id === shedId);\n    const findShed = async () => {\n      const res = await api(`/api/sheds/${shedId}`);\n      const foundShed = res.data;\n      console.log('foundShed:', foundShed);\n      if(foundShed) {\n        setShed(foundShed);\n      }\n    }\n    findShed();\n  }, []);\n  console.log('shed:', shed);\n  return (\n    <div>\n      {\n        shed &&\n          <>\n            <p className=\"path\">{shed.owner.email}</p>\n            <div id=\"plant-thumbnails-container\">\n              {shed.plantRecords.map(plantRecord => (\n                <Link to={`/sheds/${shedId}/records/${plantRecord._id}`}>\n                  <div className=\"plant-thumbnail-wrapper\">\n                    <img className=\"plant-thumbnail\" src={plantRecord.recordPhoto} alt=\"\"/>\n                    <p className=\"plant-thumbnail-name\">{plantRecord.commonName}</p>\n                  </div>\n                </Link>\n              ))}\n            </div>\n              Below this line are hardcoded thumbnails\n            <div id=\"plant-thumbnails-container\">\n              <div className=\"plant-thumbnail-wrapper\">\n                <img className=\"plant-thumbnail\" src=\"http://placekitten.com/400/300\" alt=\"\"/>\n                <p>Daisy 2</p>\n              </div>\n              <div className=\"plant-thumbnail-wrapper\">\n                <img className=\"plant-thumbnail\" src=\"http://placekitten.com/400/300\" alt=\"\"/>\n                <p>Daisy 3</p>\n              </div>\n              <div className=\"plant-thumbnail-wrapper\">\n                <img className=\"plant-thumbnail\" src=\"http://placekitten.com/400/300\" alt=\"\"/>\n                <p>Daisy 4</p>\n              </div>\n            </div>\n          </>\n      }\n    </div>\n  )\n}\n\nexport default PlantThumbnails\n","/mnt/c/Users/Thomas/repos/T3A2-FullStackApp/online-garden-shed-client/src/components/SignIn.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":41,"column":6,"nodeType":"95","endLine":41,"endColumn":8,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":14},{"ruleId":"97","severity":1,"message":"101","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":24},{"ruleId":"93","severity":1,"message":"102","line":21,"column":6,"nodeType":"95","endLine":21,"endColumn":8,"suggestions":"103"},{"ruleId":"93","severity":1,"message":"94","line":20,"column":6,"nodeType":"95","endLine":20,"endColumn":8,"suggestions":"104"},{"ruleId":"97","severity":1,"message":"105","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":14},{"ruleId":"97","severity":1,"message":"106","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":13},{"ruleId":"93","severity":1,"message":"107","line":22,"column":6,"nodeType":"95","endLine":22,"endColumn":8,"suggestions":"108"},{"ruleId":"97","severity":1,"message":"109","line":8,"column":18,"nodeType":"99","messageId":"100","endLine":8,"endColumn":26},{"ruleId":"97","severity":1,"message":"110","line":9,"column":11,"nodeType":"99","messageId":"100","endLine":9,"endColumn":16},{"ruleId":"93","severity":1,"message":"107","line":23,"column":6,"nodeType":"95","endLine":23,"endColumn":8,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["114"],"no-unused-vars","'SignIn' is defined but never used.","Identifier","unusedVar","'useGlobalState' is defined but never used.","React Hook useEffect has missing dependencies: 'plantRecordId' and 'shedId'. Either include them or remove the dependency array.",["115"],["116"],"'Link' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'shedId'. Either include it or remove the dependency array.",["117"],"'dispatch' is assigned a value but never used.","'sheds' is assigned a value but never used.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"119","fix":"123"},{"desc":"124","fix":"125"},{"desc":"124","fix":"126"},"Update the dependencies array to be: [dispatch]",{"range":"127","text":"128"},"Update the dependencies array to be: [plantRecordId, shedId]",{"range":"129","text":"130"},{"range":"131","text":"128"},"Update the dependencies array to be: [shedId]",{"range":"132","text":"133"},{"range":"134","text":"133"},[1411,1413],"[dispatch]",[716,718],"[plantRecordId, shedId]",[489,491],[696,698],"[shedId]",[722,724]]